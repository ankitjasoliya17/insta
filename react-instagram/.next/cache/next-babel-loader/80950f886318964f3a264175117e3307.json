{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/imac/Downloads/app/insta/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport request from 'superagent';\nimport FacebookLogin from 'react-facebook-login';\n\nvar responseFacebook = function responseFacebook(response) {\n  console.log(response);\n};\n\ncomponentClicked = function componentClicked() {\n  return /*#__PURE__*/function (_React$Component) {\n    _inherits(Index, _React$Component);\n\n    var _super = _createSuper(Index);\n\n    function Index() {\n      _classCallCheck(this, Index);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Index, [{\n      key: \"render\",\n      // state = {\n      //     access_token : ''\n      // }\n      // async componentDidMount() {\n      // const url = \"http://localhost:5000/abcd/\";\n      // const response = await fetch(url,);\n      // const data = await response.json();\n      // console.log(data)\n      // axios.post('http://localhost:5000/abcd/', {\n      //     code: this.getUrlParameter('code')\n      // })\n      //     .then(function (response) {\n      //         console.log(response);\n      //     })\n      //     .catch(function (error) {\n      //         console.log(error);\n      //     });\n      // console.log(this.getUrlParameter('code'));\n      // fetch(\"\",this.getUrlParameter('code'))\n      //     .then(res => res.json())\n      //     .then(\n      //         (result) => {\n      //             console.log(result);\n      //         },\n      //         // Note: it's important to handle errors here\n      //         // instead of a catch() block so that we don't swallow\n      //         // exceptions from actual bugs in components.\n      //         (error) => {\n      //             console.log(error)\n      //         }\n      //     )\n      // }\n      // getUrlParameter(sParam) {\n      //     var sPageURL = window.location.search.substring(1),\n      //         sURLVariables = sPageURL.split('&'),\n      //         sParameterName,\n      //         i;\n      //\n      //     for (i = 0; i < sURLVariables.length; i++) {\n      //         sParameterName = sURLVariables[i].split('=');\n      //\n      //         if (sParameterName[0] === sParam) {\n      //             return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);\n      //         }\n      //     }\n      // };\n      value: function render() {\n        var _this = this;\n\n        return __jsx(FacebookLogin, {\n          appId: \"591251971460198\",\n          autoLoad: true,\n          fields: \"name,email,picture\",\n          onclick: this.componentClicked,\n          callback: this.responseFacebook,\n          render: function render(renderProps) {\n            return __jsx(\"button\", {\n              onClick: renderProps.onClick,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }\n            }, \"This is my custom FB button\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }\n        });\n      }\n    }]);\n\n    return Index;\n  }(React.Component);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/index.js"],"names":["React","axios","request","FacebookLogin","responseFacebook","response","console","log","componentClicked","renderProps","onClick","Component","Index"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,CAFD;;AAIAG,gBAAgB,GAAG;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAIf;AACA;AACA;AAGA;AAEI;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDe,+BA2DN;AAAA;;AACL,eAAO,MAAC,aAAD;AACH,UAAA,KAAK,EAAC,iBADH;AAEH,UAAA,QAAQ,EAAI,IAFT;AAGH,UAAA,MAAM,EAAC,oBAHJ;AAIH,UAAA,OAAO,EAAE,KAAKA,gBAJX;AAKH,UAAA,QAAQ,EAAE,KAAKJ,gBALZ;AAMH,UAAA,MAAM,EAAE,gBAAAK,WAAW;AAAA,mBACf;AAAQ,cAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADe;AAAA,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH;AAtEc;;AAAA;AAAA,IAECV,KAAK,CAACW,SAFP;AAAA,CAAnB;;AA2EA,eAAeC,KAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport request from 'superagent'\nimport FacebookLogin from 'react-facebook-login';\n\n\nconst responseFacebook = (response) => {\n    console.log(response);\n}\n\ncomponentClicked = () => \n\nclass Index extends React.Component {\n\n    // state = {\n    //     access_token : ''\n    // }\n\n\n    // async componentDidMount() {\n\n        // const url = \"http://localhost:5000/abcd/\";\n        // const response = await fetch(url,);\n        // const data = await response.json();\n        // console.log(data)\n\n\n        // axios.post('http://localhost:5000/abcd/', {\n        //     code: this.getUrlParameter('code')\n        // })\n        //     .then(function (response) {\n        //         console.log(response);\n        //     })\n        //     .catch(function (error) {\n        //         console.log(error);\n        //     });\n\n        // console.log(this.getUrlParameter('code'));\n        // fetch(\"\",this.getUrlParameter('code'))\n        //     .then(res => res.json())\n        //     .then(\n        //         (result) => {\n        //             console.log(result);\n        //         },\n        //         // Note: it's important to handle errors here\n        //         // instead of a catch() block so that we don't swallow\n        //         // exceptions from actual bugs in components.\n        //         (error) => {\n        //             console.log(error)\n        //         }\n        //     )\n\n    // }\n\n    // getUrlParameter(sParam) {\n    //     var sPageURL = window.location.search.substring(1),\n    //         sURLVariables = sPageURL.split('&'),\n    //         sParameterName,\n    //         i;\n    //\n    //     for (i = 0; i < sURLVariables.length; i++) {\n    //         sParameterName = sURLVariables[i].split('=');\n    //\n    //         if (sParameterName[0] === sParam) {\n    //             return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);\n    //         }\n    //     }\n    // };\n\n    render() {\n        return <FacebookLogin\n            appId=\"591251971460198\"\n            autoLoad = {true}\n            fields=\"name,email,picture\"\n            onclick={this.componentClicked}\n            callback={this.responseFacebook}\n            render={renderProps => (\n                <button onClick={renderProps.onClick}>This is my custom FB button</button>\n            )}\n        />;\n    }\n}\n\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}