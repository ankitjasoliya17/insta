{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/acceptsinformation.js","webpack:///./pages/appereance.js","webpack:///./pages/facebookpages.js","webpack:///./pages/index.js","webpack:///./pages/instagram.js","webpack:///./pages/instasettings.js","webpack:///./pages/postsettings.js","webpack:///./pages/shop.js","webpack:///external \"@shopify/polaris\"","webpack:///external \"axios\"","webpack:///external \"react\"","webpack:///external \"react-facebook-login\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\nimport {Toast,Button, Heading, Form, FormLayout,SettingToggle} from '@shopify/polaris';\nimport axios from 'axios';\n\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Acceptinformation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const allsetting = props.settings;\n\n        console.log(allsetting);\n        if(allsetting!=false) {\n\n            let info_like = false;\n            let info_like_button_name = 'Enable';\n            if(allsetting.info_like){\n                if(allsetting.info_like == 'false'){\n                    info_like  =  false;\n                    info_like_button_name  =  'Enable';\n                }else{\n                    info_like  =  true;\n                    info_like_button_name  =  'Disable';\n                }\n            }\n\n\n            let info_comment = false;\n            let info_comment_button_name = 'Enable';\n            if(allsetting.info_comment){\n                if(allsetting.info_comment == 'false'){\n                    info_comment  =  false;\n                    info_comment_button_name  =  'Enable';\n                }else{\n                    info_comment  =  true;\n                    info_comment_button_name  =  'Disable';\n                }\n            }\n\n\n            let info_description = false;\n            let info_description_button_name = 'Enable';\n            if(allsetting.info_description){\n                if(allsetting.info_description == 'false'){\n                    info_description  =  false;\n                    info_description_button_name  =  'Enable';\n                }else{\n                    info_description  =  true;\n                    info_description_button_name  =  'Disable';\n                }\n            }\n\n\n            let popup_like = false;\n            let popup_like_button_name = 'Enable';\n            if(allsetting.popup_like){\n                if(allsetting.popup_like == 'false'){\n                    popup_like  =  false;\n                    popup_like_button_name  =  'Enable';\n                }else{\n                    popup_like  =  true;\n                    popup_like_button_name  =  'Disable';\n                }\n            }\n\n\n            let popup_comment = false;\n            let popup_comment_button_name = 'Enable';\n            if(allsetting.popup_comment){\n                if(allsetting.popup_comment == 'false'){\n                    popup_comment  =  false;\n                    popup_comment_button_name  =  'Enable';\n                }else{\n                    popup_comment  =  true;\n                    popup_comment_button_name  =  'Disable';\n                }\n            }\n\n\n            let popup_description = false;\n            let popup_description_button_name = 'Enable';\n            if(allsetting.popup_description){\n                if(allsetting.popup_description == 'false'){\n                    popup_description  =  false;\n                    popup_description_button_name  =  'Enable';\n                }else{\n                    popup_description  =  true;\n                    popup_description_button_name  =  'Disable';\n                }\n            }\n\n            this.state = {\n                info_like:info_like,\n                info_like_status:info_like_button_name,\n                info_comment:info_comment,\n                info_comment_status:info_comment_button_name,\n                info_description:info_description,\n                info_description_status:info_description_button_name,\n                popup_like:popup_like,\n                popup_like_status:popup_like_button_name,\n                popup_comment:popup_comment,\n                popup_comment_status:popup_comment_button_name,\n                popup_description:popup_description,\n                popup_description_status:popup_description_button_name,\n                button_type : false,\n                notification_status : false\n            }\n\n        }else{\n\n            this.state = {\n                info_like: false,\n                info_like_status: 'Enable',\n                info_comment: false,\n                info_comment_status: 'Enable',\n                info_description: false,\n                info_description_status: 'Enable',\n                popup_like: false,\n                popup_like_status: 'Enable',\n                popup_comment: false,\n                popup_comment_status: 'Enable',\n                popup_description: false,\n                popup_description_status: 'Enable',\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n        this.handleInfoLike = this.handleInfoLike.bind(this);\n        this.handleInfoComment = this.handleInfoComment.bind(this);\n        this.handleInfoDescription = this.handleInfoDescription.bind(this);\n        this.handlePopupLike = this.handlePopupLike.bind(this);\n        this.handlePopupComment = this.handlePopupComment.bind(this);\n        this.handlePopupDescription = this.handlePopupDescription.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.changestatus = this.changestatus.bind(this);\n        this.handletoggleActive = this.handletoggleActive.bind(this);\n\n    }\n\n\n\n\n\n    handleSubmit(){\n\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 2,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n    handleInfoLike(){\n\n        if(this.state.info_like == false) {\n            this.setState({\n                info_like : true,\n                info_like_status : 'Disable'\n            })\n        }else{\n            this.setState({\n                info_like : false,\n                info_like_status : 'Enable'\n            })\n        }\n\n    }\n\n    handleInfoComment(){\n\n        if(this.state.info_comment == false) {\n            this.setState({\n                info_comment : true,\n                info_comment_status : 'Disable'\n            })\n        }else{\n            this.setState({\n                info_comment : false,\n                info_comment_status : 'Enable'\n            })\n        }\n\n    }\n\n    handleInfoDescription(){\n\n        if(this.state.info_description == false) {\n            this.setState({\n                info_description : true,\n                info_description_status : 'Disable'\n            })\n        }else{\n            this.setState({\n                info_description : false,\n                info_description_status : 'Enable'\n            })\n        }\n\n    }\n\n\n    handlePopupLike(){\n\n        if(this.state.popup_like == false) {\n            this.setState({\n                popup_like : true,\n                popup_like_status : 'Disable'\n            })\n        }else{\n            this.setState({\n                popup_like : false,\n                popup_like_status : 'Enable'\n            })\n        }\n\n    }\n\n    handlePopupComment(){\n\n        if(this.state.popup_comment == false) {\n            this.setState({\n                popup_comment : true,\n                popup_comment_status : 'Disable'\n            })\n        }else{\n            this.setState({\n                popup_comment : false,\n                popup_comment_status : 'Enable'\n            })\n        }\n\n    }\n\n    handlePopupDescription(){\n\n        if(this.state.popup_description == false) {\n            this.setState({\n                popup_description : true,\n                popup_description_status : 'Disable'\n            })\n        }else{\n            this.setState({\n                popup_description : false,\n                popup_description_status : 'Enable'\n            })\n        }\n\n    }\n\n    handletoggleActive(){\n        if(this.state.notification_status==false){\n            this.setState({\n                notification_status : true\n            })\n        }else{\n            this.setState({\n                notification_status : false\n            })\n        }\n\n    }\n\n\n\n\n    render() {\n\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handletoggleActive} active />\n            );\n        }\n\n        return <div>\n            <Form\n                 onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <Heading>Information</Heading>\n                    <FormLayout.Group>\n\n                        <SettingToggle\n                            action={{\n                                content: this.state.info_like_status,\n                                onAction: this.handleInfoLike,\n                            }}\n                            enabled={this.state.info_like}\n                            >Like Count</SettingToggle>\n\n                        <SettingToggle\n                            action={{\n                                content: this.state.info_comment_status,\n                                onAction: this.handleInfoComment,\n                            }}\n                            enabled={this.state.info_comment}>Comment Count</SettingToggle>\n                        <SettingToggle\n                            action={{\n                                content: this.state.info_description_status,\n                                onAction: this.handleInfoDescription,\n                            }}\n                            enabled={this.state.info_description}>Description</SettingToggle>\n\n                    </FormLayout.Group>\n\n                    <Heading>Popup</Heading>\n\n                    <FormLayout.Group>\n                        <SettingToggle\n                            action={{\n                                content: this.state.popup_like_status,\n                                onAction: this.handlePopupLike,\n                            }}\n                            enabled={this.state.popup_like}>Like Count</SettingToggle>\n                        <SettingToggle\n                            action={{\n                                content: this.state.popup_comment_status,\n                                onAction: this.handlePopupComment,\n                            }}\n                            enabled={this.state.popup_comment}>Comment Count</SettingToggle>\n                        <SettingToggle\n                            action={{\n                                content: this.state.popup_description_status,\n                                onAction: this.handlePopupDescription,\n                            }}\n                            enabled={this.state.popup_description}>Description</SettingToggle>\n\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n            {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Acceptinformation;\n","import React from 'react';\nimport {Heading,Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        if(allsetting!=false){\n\n            let widgetcolordata = '';\n            if(allsetting.widgetcolor){\n                widgetcolordata = JSON.parse(allsetting.widgetcolor);\n            }else{\n                widgetcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let overlaycolordata = '';\n            if(allsetting.overlaycolor){\n                overlaycolordata = JSON.parse(allsetting.overlaycolor);\n            }else{\n                overlaycolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let textcolordata = '';\n            if(allsetting.textcolor){\n                textcolordata = JSON.parse(allsetting.textcolor);\n            }else{\n                textcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let pbackgroundcolordata = '';\n            if(allsetting.pbackgroundcolor){\n                pbackgroundcolordata = JSON.parse(allsetting.pbackgroundcolor);\n            }else{\n                pbackgroundcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let ptextcolordata = '';\n            if(allsetting.ptextcolor){\n                ptextcolordata = JSON.parse(allsetting.ptextcolor);\n            }else{\n                ptextcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            this.state = {\n                widgetcolor: widgetcolordata,\n                widgetpopoverActive: false,\n                overlaycolor: overlaycolordata,\n                overlaypopoverActive: false,\n                textcolor: textcolordata,\n                textpopoverActive: false,\n                pbackgroundcolor: pbackgroundcolordata,\n                pbackgroundpopoverActive: false,\n                ptextcolor: ptextcolordata,\n                ptextpopoverActive: false,\n            }\n        }else{\n            this.state = {\n                widgetcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                widgetpopoverActive: false,\n                overlaycolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                overlaypopoverActive: false,\n                textcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                textpopoverActive: false,\n                pbackgroundcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                pbackgroundpopoverActive: false,\n                ptextcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                ptextpopoverActive: false,\n            }\n        }\n\n\n\n        this.handlewidgetPopoverOpen = this.handlewidgetPopoverOpen.bind(this);\n        this.handlewidgetColorChange = this.handlewidgetColorChange.bind(this);\n        this.handlewidgetRgbChange = this.handlewidgetRgbChange.bind(this);\n        this.handlewidgetPopoverClose = this.handlewidgetPopoverClose.bind(this);\n\n        this.handleoverlayColorChange = this.handleoverlayColorChange.bind(this);\n        this.handleoverlayRgbChange = this.handleoverlayRgbChange.bind(this);\n        this.handleoverlayPopoverClose = this.handleoverlayPopoverClose.bind(this);\n        this.handleoverlayPopoverOpen = this.handleoverlayPopoverOpen.bind(this);\n\n        this.handletextColorChange = this.handletextColorChange.bind(this);\n        this.handletextRgbChange = this.handletextRgbChange.bind(this);\n        this.handletextPopoverClose = this.handletextPopoverClose.bind(this);\n        this.handletextPopoverOpen = this.handletextPopoverOpen.bind(this);\n\n        this.handlepbackgroundColorChange = this.handlepbackgroundColorChange.bind(this);\n        this.handlepbackgroundRgbChange = this.handlepbackgroundRgbChange.bind(this);\n        this.handlepbackgroundPopoverClose = this.handlepbackgroundPopoverClose.bind(this);\n        this.handlepbackgroundPopoverOpen = this.handlepbackgroundPopoverOpen.bind(this);\n\n        this.handleptextColorChange = this.handleptextColorChange.bind(this);\n        this.handleptextRgbChange = this.handleptextRgbChange.bind(this);\n        this.handleptextPopoverClose = this.handleptextPopoverClose.bind(this);\n        this.handleptextPopoverOpen = this.handleptextPopoverOpen.bind(this);\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 3,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n    handlewidgetColorChange(widgetcolor) {\n        this.setState({ widgetcolor });\n    }\n\n\n    handlewidgetRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n\n        const widgetcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ widgetcolor });\n    }\n\n\n    handlewidgetPopoverClose() {\n        this.setState({ widgetpopoverActive: false });\n    }\n\n\n    handlewidgetPopoverOpen() {\n        this.setState({\n            widgetpopoverActive : true\n        })\n    }\n\n\n    handleoverlayColorChange(overlaycolor) {\n        this.setState({ overlaycolor });\n    }\n\n\n    handleoverlayRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const overlaycolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ overlaycolor });\n    }\n\n\n    handleoverlayPopoverClose() {\n        this.setState({ overlaypopoverActive: false });\n    }\n\n\n    handleoverlayPopoverOpen() {\n        this.setState({\n            overlaypopoverActive : true\n        })\n    }\n\n\n    handletextColorChange(textcolor) {\n        this.setState({ textcolor });\n    }\n\n\n    handletextRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        const textcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ textcolor });\n    }\n\n\n    handletextPopoverClose() {\n        this.setState({ textpopoverActive: false });\n    }\n\n\n    handletextPopoverOpen() {\n        this.setState({\n            textpopoverActive : true\n        })\n    }\n\n\n    handlepbackgroundColorChange(pbackgroundcolor) {\n        this.setState({ pbackgroundcolor });\n    }\n\n\n    handlepbackgroundRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        const pbackgroundcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ pbackgroundcolor });\n    }\n\n\n    handlepbackgroundPopoverClose() {\n        this.setState({ pbackgroundpopoverActive: false });\n    }\n\n\n    handlepbackgroundPopoverOpen() {\n        this.setState({\n            pbackgroundpopoverActive : true\n        })\n    }\n\n\n    handleptextColorChange(ptextcolor) {\n        this.setState({ ptextcolor });\n    }\n\n\n    handleptextRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const ptextcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ ptextcolor });\n    }\n\n\n    handleptextPopoverClose() {\n        this.setState({ ptextpopoverActive: false });\n    }\n\n\n    handleptextPopoverOpen() {\n        this.setState({\n            ptextpopoverActive : true\n        })\n    }\n\n    render() {\n\n        const { widgetcolor, widgetpopoverActive } = this.state;\n\n        const widgetrgbaColor = rgbString(hsbToRgb(widgetcolor));\n\n        const widgetactivator = (\n            <Button onClick={this.handlewidgetPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: widgetrgbaColor\n                        }}\n                    />\n                    <span>Widget color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { overlaycolor, overlaypopoverActive } = this.state;\n\n        const overlayrgbaColor = rgbString(hsbToRgb(overlaycolor));\n\n        const overlayactivator = (\n            <Button onClick={this.handleoverlayPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: overlayrgbaColor\n                        }}\n                    />\n                    <span>Overlay color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { textcolor, textpopoverActive } = this.state;\n\n        const textrgbaColor = rgbString(hsbToRgb(textcolor));\n\n        const textactivator = (\n            <Button onClick={this.handletextPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: textrgbaColor\n                        }}\n                    />\n                    <span>Text color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { pbackgroundcolor, pbackgroundpopoverActive } = this.state;\n\n        const pbackgroundrgbaColor = rgbString(hsbToRgb(pbackgroundcolor));\n\n        const pbackgroundactivator = (\n            <Button onClick={this.handlepbackgroundPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: pbackgroundrgbaColor\n                        }}\n                    />\n                    <span>Background color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { ptextcolor, ptextpopoverActive } = this.state;\n\n        const ptextrgbaColor = rgbString(hsbToRgb(ptextcolor));\n\n        const ptextactivator = (\n            <Button onClick={this.handleptextPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: ptextrgbaColor\n                        }}\n                    />\n                    <span>Text color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handlehsbToRgbtoggleActive} active />\n            );\n        }\n\n\n        return <div>\n            <Form\n                onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <Heading>Gallary</Heading>\n                    <FormLayout.Group>\n\n                        <Popover\n                            active={widgetpopoverActive}\n                            activator={widgetactivator}\n                            onClose={this.handlewidgetPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handlewidgetColorChange}\n                                    color={widgetcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={widgetrgbaColor} onChange={this.handlewidgetRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                        <Popover\n                            active={overlaypopoverActive}\n                            activator={overlayactivator}\n                            onClose={this.handleoverlayPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handleoverlayColorChange}\n                                    color={overlaycolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={overlayrgbaColor} onChange={this.handleoverlayRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n                        <Popover\n                            active={textpopoverActive}\n                            activator={textactivator}\n                            onClose={this.handletextPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handletextColorChange}\n                                    color={textcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={textrgbaColor} onChange={this.handletextRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n                    </FormLayout.Group>\n\n                    <Heading>Popup</Heading>\n\n                    <FormLayout.Group>\n\n                        <Popover\n                            active={pbackgroundpopoverActive}\n                            activator={pbackgroundactivator}\n                            onClose={this.handlepbackgroundPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handlepbackgroundColorChange}\n                                    color={pbackgroundcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={pbackgroundrgbaColor} onChange={this.handlepbackgroundRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                        <Popover\n                            active={ptextpopoverActive}\n                            activator={ptextactivator}\n                            onClose={this.handleptextPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handleptextColorChange}\n                                    color={ptextcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={ptextrgbaColor} onChange={this.handleptextRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n            {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n","import React, { useCallback, useState } from 'react';\nimport {Page,Banner,Button,Modal, Card, ResourceItem,Scrollable, TextStyle} from '@shopify/polaris';\nimport axios from 'axios';\nimport '../css/style.css';\nimport Instagram from '../pages/instagram';\n\n\n\n\nfunction FacebookPageList(props) {\n\n    // this.handleClick = this.handleClick.bind(this);\n\n    const items = props.pages;\n    const instatus = props.instastatus;\n\n    const [active, setActive] = useState(false);\n\n    const handleChange = useCallback(() => setActive(!active), [active]);\n\n\n    const handleScrollBottom = useCallback(() => console.log('Scrolled to bottom'), []);\n\n    const pageclass = \"fb_page_model_button\";\n\n\n\n    function handlepage(page_id) {\n\n        const post_data  = {\n            page_id : page_id,\n            shop : new URLSearchParams(window.location.search).get('shop')\n        }\n\n        axios.post('http://localhost:5000/get_insta_account/',post_data)\n                .then(function (response1) {\n                     props.openModal(response1)\n\n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n    }\n\n\n    // const handlepage  = useCallback((e) =>\n    //\n    // // const postdata = {\n    // //\n    // //     }\n    //\n    //\n    //\n    //     , []);\n\n\n\n    return (\n        <div style={{height: '50px'}}>\n\n            <div className={pageclass}>\n                <Button onClick={handleChange} primary>Select Facebook Pages</Button>\n            </div>\n            <Modal\n                open={active}\n                title=\"Business Pages\"\n                onScrolledToBottom={handleScrollBottom}\n                onClose={handleChange}\n                className='my-own-class'\n            >\n                {instatus}\n                {items.map((value, index) => {\n\n                    return  <Modal.Section key={index} className='my-own-class'>\n                        <ResourceItem\n                            id={value.id}\n                            name={value.category}\n                            onClick={handlepage.bind(value.id)}\n                            accessibilityLabel={`View details for ${value.category}`}\n                        >\n                            <h3>\n                                <TextStyle variation=\"strong\">{value.name}</TextStyle>\n                            </h3>\n                            <div>{value.category}</div>\n                        </ResourceItem>\n                    </Modal.Section>\n\n                })}\n\n            </Modal>\n        </div>\n    );\n}\n\n// function ResourceListWithSelectionExample(props) {\n//\n//     const resourceName = {\n//         singular: 'Pages',\n//         plural: 'Pages',\n//     };\n//\n//     const items = props.pages;\n//\n//\n//     return (\n//         <Card>\n//             <ResourceList\n//                 resourceName={resourceName}\n//                 items={items}\n//                 renderItem={renderItem}\n//             />\n//         </Card>\n//     );\n//\n//     function renderItem(item) {\n//         const {id, category, name,access_token} = item;\n//\n//\n//         return (\n//             <ResourceItem\n//                 id={id}\n//                 name={category}\n//                 url= {`instagram?page_id=${id}&access_token=${access_token}`}\n//                 accessibilityLabel={`View details for ${category}`}\n//             >\n//                 <h3>\n//                     <TextStyle variation=\"strong\">{name}</TextStyle>\n//                 </h3>\n//                 <div>{category}</div>\n//             </ResourceItem>\n//         );\n//     }\n// }\n\nclass Facebook extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pages: props.alldata.data,\n            allpost : 'noinsta',\n            getpost : false\n        }\n        this.openModal = this.openModal.bind(this);\n    }\n\n    openModal(response){\n        this.setState({\n            getpost : true,\n            allpost : response.data\n        });\n    }\n\n\n    render() {\n\n        let fbpagecontent;\n        let instacontent;\n        let instaconnected;\n\n        if(this.state.allpost==true){\n            instaconnected = (\n                <Banner\n                    title=\"Instagram Account Connected Successfully\"\n                    status=\"success\"\n                />\n            );\n        }else if(this.state.allpost==false){\n            instaconnected = (\n                <Banner\n                    title=\"Did not found any Instagram account\"\n                    status=\"critical\"\n                />\n            );\n\n        }else{\n\n        }\n\n\n        if(this.state.pages!=''){\n            fbpagecontent = (\n                    <FacebookPageList openModal={this.openModal} pages={this.state.pages} instastatus={instaconnected}/>\n            )\n        }\n\n        // if(this.state.getpost){\n        //\n        //     instacontent = (\n        //         <Instagram allpost={this.state.allpost} />\n        //     )\n        // }\n\n        return <Page><div className='fb_page_model'>{fbpagecontent}</div></Page>;\n    }\n}\n\n\nexport default Facebook;\n\n","import React from 'react';\nimport axios from 'axios';\nimport FacebookLogin from 'react-facebook-login';\nimport FacebookPage from '../pages/facebookpages';\nimport Instasettings from '../pages/instasettings';\nimport Instagram from '../pages/instagram';\nimport {Frame} from '@shopify/polaris';\n\n\nclass Index extends React.Component {\n\n    constructor(props) {\n\n        console.log(props);\n\n        super(props);\n        this.state = {\n            isFBLoggedIn : true,\n            userID:'',\n            name:'',\n            email:'',\n            picture:'',\n            allpages:'',\n            fbpage : false,\n            allsettings : '',\n            post_shown:false\n\n        };\n\n        this.logoutFacebook = this.logoutFacebook.bind(this);\n        this.setnewstatus = this.setnewstatus.bind(this);\n\n    }\n\n    componentDidMount(){\n\n\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n        console.log(shop_name);\n        // var shopname = this.shopname();\n        // console.log('1111');\n        // console.log(shopname);\n        // console.log('2222');\n        //\n        //\n        const postdata = {\n            shop : shop_name,\n        }\n        //\n        var self= this;\n\n        axios.post('http://localhost:5000/check_login_account/',postdata)\n            .then(function (response1) {\n                console.log(response1);\n                self.changefbstatus();\n                if(response1.data==true){\n                    axios.post('http://localhost:5000/get_fb_pages/',postdata)\n                        .then(function (response) {\n                            self.changestatus(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios.post('http://localhost:5000/get_settings/',postdata)\n            .then(function (response1) {\n                self.setnewstatus(response1.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n\n    setnewstatus(data){\n        this.setState({\n            allsettings : data\n        })\n    }\n\n    changefbstatus(){\n        this.setState({\n            isFBLoggedIn : true,\n        })\n    }\n\n    changestatus(response){\n        this.setState({\n            fbpage : true,\n            allpages : response.data\n        })\n    }\n\n\n    logoutFacebook(){\n        console.log('111');\n        this.setState({\n            isFBLoggedIn : false\n        })\n    }\n\n    setstatus(response) {\n        console.log(response);\n        this.setState({\n            isFBLoggedIn : true,\n            fbpage : true,\n            allpages : response.data\n        })\n    }\n\n    updateState() {\n        this.setState({ post_shown: false });\n    }\n\n\n       responseFacebook = (response) => {\n\n            if(response.data!='undefined'){\n                var self= this;\n\n                const search = window.location.search; // could be '?foo=bar'\n                const params = new URLSearchParams(search);\n                const shop_name = params.get('shop');\n\n                const postdata = {\n                    shop : shop_name,\n                    response : response\n                }\n\n                axios.post('http://localhost:5000/save_accesstoken/',postdata)\n                    .then(function (response1) {\n                        console.log(response1);\n                        const shopdata = {\n                            shop : shop_name\n                        }\n\n                        axios.post('http://localhost:5000/get_fb_pages/',shopdata)\n                            .then(function (response) {\n                                self.setstatus(response);\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                            });\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n\n       }\n\n\n    componentClicked = () => console.log('clieked');\n\n   render() {\n\n        let fbContent;\n\n        if(this.state.isFBLoggedIn){\n            if(this.state.fbpage){\n                fbContent = (\n                    <div>\n                        <FacebookPage alldata={this.state.allpages} />\n                    </div>\n                );\n            }\n        }else{\n            fbContent = (<FacebookLogin\n                appId=\"591251971460198\"\n                autoLoad = {true}\n                fields=\"name,email,picture\"\n                scope=\"public_profile,email,manage_pages,read_insights,pages_show_list,instagram_basic\"\n                onClick={this.componentClicked}\n                callback={this.responseFacebook}\n            />);\n        }\n\n        let instasettings;\n\n        if(this.state.allsettings!=''){\n            instasettings = (\n                <Instasettings allsettings={this.state.allsettings} />\n            );\n        }\n\n        return <div className=\"ankit\">\n            <Frame>\n            {instasettings}\n            {fbContent}\n            <Instagram />\n            </Frame>\n            </div>;\n    }\n}\n\n\n\nexport default Index;\n\n","import React, { useState ,useCallback} from 'react';\nimport axios from 'axios';\nimport {Button,Badge,Modal,Stack} from '@shopify/polaris';\n\nfunction InstaPostList(props) {\n\n\n    const items1 = props.instapost;\n\n    const [active, setActive] = useState(true);\n\n    const handleChange = useCallback(() => setActive(!active), [active]);\n\n    const handleScrollBottom = useCallback(() => console.log('Scrolled to bottom'), []);\n\n    const pageclass = \"insta_post_model\";\n\n    return (\n        <div style={{height: '50px'}}>\n\n            <div className={pageclass}>\n                <Button onClick={handleChange} primary>Instagram Post</Button>\n            </div>\n\n            <Modal\n                large\n                open={active}\n                title=\"Instagram Post\"\n                onScrolledToBottom={handleScrollBottom}\n                onClose={handleChange}\n                className='insta_post_data'\n            >\n\n                {items1.map((value, index) => {\n\n\n                        return  <Modal.Section key={index} className='insta_post_data' oneThird>\n                            <Stack vertical oneThird distribution=\"fill\">\n                            <Badge><img alt=\"\" width=\"100%\" height=\"100%\" style={{ objectFit: 'cover', objectPosition: 'center', }} src={value.media_url} />\n                            </Badge>\n                            </Stack>\n                        </Modal.Section>\n\n                })}\n\n\n            </Modal>\n        </div>\n    );\n}\n\n\n\n    class Instagram extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            instapost : ''\n        }\n\n        this.updatedata = this.updatedata.bind(this);\n\n    }\n\n\n    componentDidMount(){\n\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            shop : shop_name\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/get_insta_post/',postdata)\n            .then(function (response1) {\n              console.log(response1);\n                self.updatedata(response1.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n\n        const link = document.createElement(\"link\");\n        link.href = \"../css/posterstyle.css\";\n        link.async = true;\n        document.body.appendChild(link);\n\n\n\n        const link1 = document.createElement(\"link\");\n        link1.href = \"../css/slick.css\";\n        link1.async = true;\n        document.body.appendChild(link1);\n\n        const link2 = document.createElement(\"link\");\n        link2.href = \"../css/slick-theme.css\";\n        link2.async = true;\n        document.body.appendChild(link2);\n\n        const script = document.createElement(\"script\");\n        script.src = \"../js/jquery.min.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        const script1 = document.createElement(\"script\");\n        script1.src = \"../js/slick.min.js\";\n        script1.async = true;\n        document.body.appendChild(script1);\n\n\n    }\n\n\n    updatedata(resdata){\n        console.log(resdata);\n        this.setState({\n            instapost:resdata.data\n        })\n\n\n    }\n\n\n    render() {\n\n        // if(this.state.instapost!=''){\n        //     instagrampost = (\n        //         <InstaPostList instapost={this.state.instapost} />\n        //     );\n        // }\n\n        const elements = ['one', 'two', 'three'];\n\n        const instagrampost = []\n\n\n        console.log(this.state.instapost);\n\n        if(this.state.instapost!=''){\n\n           const items1 = this.state.instapost\n\n\n            for (const [index, value] of items1.entries()) {\n\n                instagrampost.push(\n                    <a href=\"javascript:void(0);\" className=\"dm-insta-url\" onClick=\"document.getElementById('dm-0-insta-feed').style.display='block'\">\n                        <div className=\"dm-insta-img\">\n                            <img src={value.media_url} />\n                                <div className=\"dm-instafeed-overlay\">\n                                    <div className=\"dm-like-btn\">\n                                        <span><i className=\"far fa-heart\" />37</span>\n                                        <p><i className=\"fas fa-quote-right\" />2</p>\n                                    </div>\n                                </div>\n                        </div>\n                    </a>\n                )\n            }\n\n        }\n\n        return (<div className=\"instagram_image\">\n                    <div className=\"dm-insta-feed\">\n                        <div className=\"dm-container\">\n                            <h1 className=\"dm-title\">INSTAGRAM</h1>\n                                <div className=\"dm-insta-row\">\n                                    <div id=\"insta-slider\">\n                                        {instagrampost}\n                                    </div>\n                                </div>\n                            </div>\n                    </div>\n                </div>\n                );\n    }\n\n}\n\n\nexport default Instagram;\n","import React, {useCallback, useState} from 'react';\nimport {Card, Tabs} from '@shopify/polaris';\nimport Postsettings from '../pages/postsettings';\nimport Acceptinformation from '../pages/acceptsinformation';\nimport Appereance from '../pages/appereance';\nimport Shop from '../pages/shop';\nimport axios from 'axios';\n\nfunction FittedTabsExample(props) {\n\n    const [selected, setSelected] = useState(0);\n\n    const handleTabChange = useCallback(\n        (selectedTabIndex) => setSelected(selectedTabIndex),\n        [],\n    );\n\n    const postsetting = props.allpostsettings;\n\n    const tabs = [\n        {\n            id: 'all-post-setting',\n            content: 'Gallary Settings',\n            accessibilityLabel: 'Gallary Settings',\n            panelID: 'all-post-setting-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-information',\n            content: 'Information',\n            accessibilityLabel: 'Information',\n            panelID: 'all-accepts-information-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-appereance',\n            content: 'Appereance',\n            accessibilityLabel: 'Appereance',\n            panelID: 'all-accepts-appereance-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-shop',\n            content: 'Shop',\n            accessibilityLabel: 'Shop',\n            panelID: 'all-accepts-shop-fitted-Ccontent',\n        }\n    ];\n\n    let tabcontent;\n    if(selected==0){\n        tabcontent = (\n            <Postsettings settings={postsetting} />\n        );\n    }else if(selected==1){\n        tabcontent = (\n            <Acceptinformation settings={postsetting} />\n        );\n    }else if(selected==2){\n        tabcontent = (\n            <Appereance settings={postsetting} />\n        );\n    }else if(selected==3){\n        tabcontent = (\n            <Shop settings={postsetting} />\n        );\n    }\n\n\n    return (\n        <Card>\n            <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} fitted>\n                <Card.Section>\n                    {tabcontent}\n                </Card.Section>\n            </Tabs>\n        </Card>\n    );\n}\n\n\nclass Instasettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allsettings : props.allsettings\n        }\n\n    }\n\n\n    render() {\n\n        return <div>\n            <FittedTabsExample allpostsettings={this.state.allsettings} />\n        </div>;\n    }\n\n\n}\n\nexport default Instasettings;\n","import React from 'react';\nimport {Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        if(allsetting!=false){\n\n            let colordata = '';\n            if(allsetting.color){\n              colordata = JSON.parse(allsetting.color);\n            }else{\n              colordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let display_border = false;\n            let display_border_button_name = 'Enable';\n            if(allsetting.display_border){\n                if(allsetting.display_border == 'true'){\n                    display_border  =  false;\n                    display_border_button_name  =  'Enable';\n                }else{\n                    display_border  =  true;\n                    display_border_button_name  =  'Disable';\n                }\n            }\n\n            let social_sharing = false;\n            let social_sharing_button_name = 'Enable';\n            if(allsetting.social_sharing){\n                if(allsetting.social_sharing == 'true'){\n                    social_sharing  =  false;\n                    social_sharing_button_name  =  'Enable';\n                }else{\n                    social_sharing  =  true;\n                    social_sharing_button_name  =  'Disable';\n                }\n            }\n\n            let check_widget = '';\n            if(allsetting.check_widget){\n                check_widget = allsetting.check_widget;\n            }\n\n            let check_hover = '';\n            if(allsetting.check_hover){\n                check_hover = allsetting.check_hover;\n            }\n\n            let widget_heading_value = '';\n            if(allsetting.widget_heading_value){\n                widget_heading_value = allsetting.widget_heading_value;\n            }\n\n            let border_width_value = '';\n            if(allsetting.border_width_value){\n                border_width_value = allsetting.border_width_value;\n            }\n\n            let layout_row_value = '';\n            if(allsetting.layout_row_value){\n                layout_row_value = allsetting.layout_row_value;\n            }\n\n            let padding_value = '';\n            if(allsetting.padding_value){\n                padding_value = allsetting.padding_value;\n            }\n\n            this.state = {\n                color: colordata,\n                popoverActive: false,\n                checkwidget : check_widget,\n                checkhover : check_hover,\n                display_border : display_border,\n                display_border_button_name : display_border_button_name,\n                social_sharing : social_sharing,\n                social_sharing_button_name : social_sharing_button_name,\n                border_width_value : border_width_value,\n                widget_heading_value: widget_heading_value,\n                layout_column_value : border_width_value,\n                layout_row_value : layout_row_value,\n                padding_value : padding_value,\n                button_type : false,\n                notification_status : false\n            }\n        }else{\n            this.state = {\n                color: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                popoverActive: false,\n                checkwidget : 'grid',\n                checkhover : 'zoom_out',\n                display_border : false,\n                display_border_button_name : 'Enable',\n                social_sharing : false,\n                social_sharing_button_name : 'Enable',\n                border_width_value : '1',\n                widget_heading_value: '',\n                layout_column_value : '6',\n                layout_row_value : '2',\n                padding_value : '1',\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n\n\n        this.handlePopoverOpen = this.handlePopoverOpen.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleRgbChange = this.handleRgbChange.bind(this);\n        this.handlePopoverClose = this.handlePopoverClose.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleSelectHoveeffect = this.handleSelectHoveeffect.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleToggleSocial = this.handleToggleSocial.bind(this);\n        this.handleBorderwidth = this.handleBorderwidth.bind(this);\n        this.handleWidgetheading = this.handleWidgetheading.bind(this);\n        this.handleLayoutCol = this.handleLayoutCol.bind(this);\n        this.handleLayoutRow = this.handleLayoutRow.bind(this);\n        this.handlePadding = this.handlePadding.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.changestatus = this.changestatus.bind(this);\n        this.handletoggleActive = this.handletoggleActive.bind(this);\n\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 1,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n    handleColorChange(color) {\n        this.setState({ color });\n    }\n\n\n    handleRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const color = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ color });\n    }\n\n\n    handlePopoverClose() {\n        this.setState({ popoverActive: false });\n    }\n\n\n    handlePopoverOpen() {\n        this.setState({\n            popoverActive : true\n        })\n    }\n\n\n    handleSelectChange(value){\n        this.setState({\n            checkwidget :value\n        })\n    }\n\n    handleSelectHoveeffect(value){\n        this.setState({\n            checkhover :value\n        })\n    }\n\n    handleToggle(){\n\n        if(this.state.display_border == false) {\n            this.setState({\n                display_border : true,\n                display_border_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                display_border : false,\n                display_border_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    handleToggleSocial(){\n\n        if(this.state.social_sharing == false) {\n            this.setState({\n                social_sharing : true,\n                social_sharing_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                social_sharing : false,\n                social_sharing_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    handleBorderwidth(value){\n        this.setState({\n            border_width_value: value\n        })\n    }\n\n    handleWidgetheading(value){\n        this.setState({\n            widget_heading_value: value\n        })\n    }\n\n    handleLayoutCol(value){\n        this.setState({\n            layout_column_value: value\n        })\n    }\n\n    handleLayoutRow(value){\n        this.setState({\n            layout_row_value: value\n        })\n    }\n\n    handlePadding(value){\n        this.setState({\n            padding_value: value\n        })\n    }\n\n    handletoggleActive(){\n        if(this.state.notification_status==false){\n            this.setState({\n                notification_status : true\n            })\n        }else{\n            this.setState({\n                notification_status : false\n            })\n        }\n\n    }\n\n    render() {\n\n        const { color, popoverActive } = this.state;\n\n        const rgbaColor = rgbString(hsbToRgb(color));\n\n        const activator = (\n            <Button onClick={this.handlePopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: rgbaColor\n                        }}\n                    />\n                    <span>Border color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handletoggleActive} active />\n            );\n        }\n\n        const options = [\n            {label: 'Grid', value: 'grid'},\n            {label: 'List', value: 'list'}\n        ];\n\n        const options1 = [\n            {label: 'Zoom Out', value: 'zoom_out'},\n            {label: 'Zoom In', value: 'zoom_in'}\n        ];\n\n\n        return <div>\n            <Form\n                 onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <FormLayout.Group>\n\n                        <Select\n                            label=\"Widget Type\"\n                            options={options}\n                            onChange={this.handleSelectChange}\n                            value={this.state.checkwidget}\n                        />\n\n                        <Select\n                            label=\"Hover Effect\"\n                            options={options1}\n                            onChange={this.handleSelectHoveeffect}\n                            value={this.state.checkhover}\n                        />\n\n                        <SettingToggle\n                            action={{\n                                content: this.state.display_border_button_name,\n                                onAction: this.handleToggle,\n                            }}\n                            enabled={this.state.display_border}\n                        />\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField type=\"number\" label=\"Layout Columns\" value={this.state.layout_column_value} onChange={this.handleLayoutCol} />\n                        <TextField type=\"number\" label=\"Layout Rows\" value={this.state.layout_row_value} onChange={this.handleLayoutRow} />\n                        <SettingToggle\n                            action={{\n                                content: this.state.social_sharing_button_name,\n                                onAction: this.handleToggleSocial,\n                            }}\n                             enabled={this.state.social_sharing}\n                        />\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField\n                            label=\"Border Width\"\n                            type=\"number\"\n                            value={this.state.border_width_value}\n                            onChange={this.handleBorderwidth}\n                            connectedRight={\n                                <Select\n                                    label=\"Pixel Unit\"\n                                    labelHidden\n                                    value=\"PX\"\n                                    options={['PX']}\n                                    onChange =\"hello\"\n                                />\n                            }\n                        />\n\n                        <TextField label=\"Widget Heading\" value={this.state.widget_heading_value} onChange={this.handleWidgetheading} />\n                        <Popover\n                            active={popoverActive}\n                            activator={activator}\n                            onClose={this.handlePopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handleColorChange}\n                                    color={color}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={rgbaColor} onChange={this.handleRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField\n                            label=\"Padding (Space Beetween Image)\"\n                            type=\"number\"\n                            value={this.state.padding_value}\n                            onChange={this.handlePadding}\n                            connectedRight={\n                                <Select\n                                    label=\"Pixel Unit\"\n                                    labelHidden\n                                    value=\"PX\"\n                                    options={['PX']}\n                                    onChange =\"hello\"\n                                />\n                            }\n                        />\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n                {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n","import React from 'react';\nimport {Heading,Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        if(allsetting!=false){\n\n            let shopbackgroundcolordata = '';\n            if(allsetting.shopbackgroundcolor){\n                shopbackgroundcolordata = JSON.parse(allsetting.shopbackgroundcolor);\n            }else{\n                shopbackgroundcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let shoptextcolordata = '';\n            if(allsetting.shoptextcolor){\n                shoptextcolordata = JSON.parse(allsetting.shoptextcolor);\n            }else{\n                shoptextcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let shop_heading_value = '';\n            if(allsetting.shop_heading_value){\n                shop_heading_value = allsetting.shop_heading_value;\n            }\n\n            let shop_button = false;\n            let shop_button_name = 'Enable';\n            if(allsetting.shop_button){\n                if(allsetting.shop_button == 'false'){\n                    shop_button  =  false;\n                    shop_button_name  =  'Enable';\n                }else{\n                    shop_button  =  true;\n                    shop_button_name  =  'Disable';\n                }\n            }\n\n            this.state = {\n                shopbackgroundcolor: shopbackgroundcolordata,\n                backgroundpopoverActive: false,\n                shoptextcolor: shoptextcolordata,\n                textpopoverActive: false,\n                shop_button : shop_button,\n                shop_button_name : shop_button_name,\n                shop_heading_value : shop_heading_value\n            }\n        }else{\n            this.state = {\n                shopbackgroundcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                backgroundpopoverActive: false,\n                shoptextcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                textpopoverActive: false,\n                shop_button : false,\n                shop_button_name : 'Enable',\n                shop_heading_value : '',\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n        this.handlebackgroundColorChange = this.handlebackgroundColorChange.bind(this);\n        this.handlebackgroundRgbChange = this.handlebackgroundRgbChange.bind(this);\n        this.handlebackgroundPopoverClose = this.handlebackgroundPopoverClose.bind(this);\n        this.handlebackgroundPopoverOpen = this.handlebackgroundPopoverOpen.bind(this);\n\n        this.handletextColorChange = this.handletextColorChange.bind(this);\n        this.handletextRgbChange = this.handletextRgbChange.bind(this);\n        this.handletextPopoverClose = this.handletextPopoverClose.bind(this);\n        this.handletextPopoverOpen = this.handletextPopoverOpen.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleShopheading = this.handleShopheading.bind(this);\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 4,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n\n    handlebackgroundColorChange(shopbackgroundcolor) {\n        this.setState({ shopbackgroundcolor });\n    }\n\n\n    handlebackgroundRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        const shopbackgroundcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ shopbackgroundcolor });\n    }\n\n\n    handlebackgroundPopoverClose() {\n        this.setState({ backgroundpopoverActive: false });\n    }\n\n\n    handlebackgroundPopoverOpen() {\n        this.setState({\n            backgroundpopoverActive : true\n        })\n    }\n\n\n    handletextColorChange(shoptextcolor) {\n        this.setState({ shoptextcolor });\n    }\n\n\n    handletextRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const shoptextcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ shoptextcolor });\n    }\n\n\n    handletextPopoverClose() {\n        this.setState({ textpopoverActive: false });\n    }\n\n\n    handletextPopoverOpen() {\n        this.setState({\n            textpopoverActive : true\n        })\n    }\n\n    handleShopheading(value){\n        this.setState({\n            shop_heading_value: value\n        })\n    }\n\n    handleToggle(){\n\n        if(this.state.shop_button == false) {\n            this.setState({\n                shop_button : true,\n                shop_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                shop_button : false,\n                shop_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    render() {\n\n        const { shopbackgroundcolor, backgroundpopoverActive } = this.state;\n\n        const backgroundrgbaColor = rgbString(hsbToRgb(shopbackgroundcolor));\n\n        const backgroundactivator = (\n            <Button onClick={this.handlebackgroundPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: backgroundrgbaColor\n                        }}\n                    />\n                    <span>Background color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { shoptextcolor, textpopoverActive } = this.state;\n\n        const textrgbaColor = rgbString(hsbToRgb(shoptextcolor));\n\n        const textactivator = (\n            <Button onClick={this.handletextPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: textrgbaColor\n                        }}\n                    />\n                    <span>Text color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handlehsbToRgbtoggleActive} active />\n            );\n        }\n\n\n        return <div>\n            <Form\n                onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <Heading>Shop Button Settings</Heading>\n\n                    <FormLayout.Group>\n\n                        <Popover\n                            active={backgroundpopoverActive}\n                            activator={backgroundactivator}\n                            onClose={this.handlebackgroundPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handlebackgroundColorChange}\n                                    color={shopbackgroundcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={backgroundrgbaColor} onChange={this.handlebackgroundRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                        <Popover\n                            active={textpopoverActive}\n                            activator={textactivator}\n                            onClose={this.handletextPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handletextColorChange}\n                                    color={shoptextcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={textrgbaColor} onChange={this.handletextRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <SettingToggle\n                            action={{\n                                content: this.state.shop_button_name,\n                                onAction: this.handleToggle,\n                            }}\n                            enabled={this.state.shop_button}\n                        />\n\n                        <TextField label=\"Shop Button Heading\" value={this.state.shop_heading_value} onChange={this.handleShopheading} />\n\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n            {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"axios\");","module.exports = require(\"react\");","module.exports = require(\"react-facebook-login\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxdA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AADA;AAQA;AACA;AACA;AAFA;AAIA;AALA;AASA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AALA;AAaA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AALA;AASA;AAAA;AAAA;AAAA;AAQA;AACA;AAzWA;AACA;AA4WA;;;;;;;;;;;;;;;;;;;;;;ACtXA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAxCA;AA0CA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AADA;AAQA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAWA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAQA;AACA;AAtjBA;AACA;AAyjBA;;;;;;;;;;;;;;;;;;;;;;;AClkiEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AALA;AAkHA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AADA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAnJA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAyCA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AAhMA;AACA;AAmMA;;;;;;;;;;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAMA;AACA;AAGA;AACA;AACA;AAEA;AACA;AADA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AADA;AAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AAhIA;AACA;AAmIA;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAjBA;AACA;AAoBA;;;;;;;;;;;;;;;;;;;;;;ACnfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAEA;AADA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AALA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AANA;AAgBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AANA;AAiBA;AAAA;AAAA;AAAA;AAQA;AACA;AAnbA;AACA;AAsbA;;;;;;;;;;;;;;;;;;;;;;AC/bA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AADA;AASA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAQA;AACA;AACA;AAFA;AAIA;AALA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAQA;AACA;AA9UA;AACA;AAiVA;;;;;;;;;;;;;;;;;;;;;;;AC1VA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}