{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useCallback, useState } from 'react';\nimport { Button, Checkbox, Form, FormLayout, TextField, Select } from '@shopify/polaris';\n\nvar Postsettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Postsettings, _React$Component);\n\n  var _super = _createSuper(Postsettings);\n\n  function Postsettings(props) {\n    _classCallCheck(this, Postsettings);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Postsettings, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(FormOnSubmitExample, null));\n    }\n  }]);\n\n  return Postsettings;\n}(React.Component);\n\nexport default Postsettings;\n\nfunction FormOnSubmitExample() {\n  var _useState = useState(false),\n      newsletter = _useState[0],\n      setNewsletter = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var handleSubmit = useCallback(function (_event) {\n    setEmail('sdd');\n    setNewsletter(false);\n  }, []);\n  var handleNewsLetterChange = useCallback(function (value) {\n    return setNewsletter(value);\n  }, []);\n\n  var _useState3 = useState('grid'),\n      selected = _useState3[0],\n      setSelected = _useState3[1];\n\n  var _useState4 = useState('zoom_out'),\n      selected1 = _useState4[0],\n      setSelected1 = _useState4[1];\n\n  var handleSelectChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n  var handleSelectChange1 = useCallback(function (value) {\n    return setSelected1(value);\n  }, []);\n  var handleEmailChange = useCallback(function (value) {\n    return setEmail(value);\n  }, []);\n  var options = [{\n    label: 'Grid',\n    value: 'grid'\n  }, {\n    label: 'List',\n    value: 'list'\n  }];\n  var options1 = [{\n    label: 'Zoom Out',\n    value: 'zoom_out'\n  }, {\n    label: 'Zoom In',\n    value: 'zoom_in'\n  }];\n\n  var _useState5 = useState(false),\n      active = _useState5[0],\n      setActive = _useState5[1];\n\n  var handleToggle = useCallback(function () {\n    return setActive(function (active) {\n      return !active;\n    });\n  }, []);\n  var contentStatus = active ? 'Disable' : 'Enable';\n  var textStatus = active ? 'enabled' : 'disabled';\n  return __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(Select, {\n    label: \"Widget Type\",\n    options: options,\n    onChange: handleSelectChange,\n    value: selected\n  }), __jsx(Select, {\n    label: \"Hover Effect\",\n    options: options1,\n    onChange: handleSelectChange1,\n    value: selected1\n  }), __jsx(SettingToggle, {\n    action: {\n      content: contentStatus,\n      onAction: handleToggle\n    },\n    enabled: active\n  }, \"This setting is \", __jsx(TextStyle, {\n    variation: \"strong\"\n  }, textStatus), \".\")), __jsx(Button, {\n    submit: true\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/postsettings.js"],"names":["React","useCallback","useState","Button","Checkbox","Form","FormLayout","TextField","Select","Postsettings","props","Component","FormOnSubmitExample","newsletter","setNewsletter","email","setEmail","handleSubmit","_event","handleNewsLetterChange","value","selected","setSelected","selected1","setSelected1","handleSelectChange","handleSelectChange1","handleEmailChange","options","label","options1","active","setActive","handleToggle","contentStatus","textStatus","content","onAction"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Button, Checkbox, Form, FormLayout, TextField,Select} from '@shopify/polaris';\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n\n        return <div>\n            <FormOnSubmitExample />\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n\n\nfunction FormOnSubmitExample() {\n    const [newsletter, setNewsletter] = useState(false);\n    const [email, setEmail] = useState('');\n\n    const handleSubmit = useCallback((_event) => {\n        setEmail('sdd');\n        setNewsletter(false);\n    }, []);\n\n    const handleNewsLetterChange = useCallback(\n        (value) => setNewsletter(value),\n        [],\n    );\n    const [selected, setSelected] = useState('grid');\n    const [selected1, setSelected1] = useState('zoom_out');\n    const handleSelectChange = useCallback((value) => setSelected(value), []);\n    const handleSelectChange1 = useCallback((value) => setSelected1(value), []);\n\n    const handleEmailChange = useCallback((value) => setEmail(value), []);\n\n    const options = [\n        {label: 'Grid', value: 'grid'},\n        {label: 'List', value: 'list'}\n    ];\n\n    const options1 = [\n        {label: 'Zoom Out', value: 'zoom_out'},\n        {label: 'Zoom In', value: 'zoom_in'}\n    ];\n\n    const [active, setActive] = useState(false);\n\n    const handleToggle = useCallback(() => setActive((active) => !active), []);\n\n    const contentStatus = active ? 'Disable' : 'Enable';\n    const textStatus = active ? 'enabled' : 'disabled';\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormLayout>\n            <FormLayout.Group>\n\n                <Select\n                    label=\"Widget Type\"\n                    options={options}\n                    onChange={handleSelectChange}\n                    value={selected}\n                />\n\n                <Select\n                    label=\"Hover Effect\"\n                    options={options1}\n                    onChange={handleSelectChange1}\n                    value={selected1}\n                />\n                <SettingToggle\n                    action={{\n                        content: contentStatus,\n                        onAction: handleToggle,\n                    }}\n                    enabled={active}\n                >\n                    This setting is <TextStyle variation=\"strong\">{textStatus}</TextStyle>.\n                </SettingToggle>\n\n            </FormLayout.Group>\n                <Button submit>Submit</Button>\n            </FormLayout>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}