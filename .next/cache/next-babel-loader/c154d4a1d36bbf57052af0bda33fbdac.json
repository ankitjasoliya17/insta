{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Heading, Toast, Button, Checkbox, Form, FormLayout, SettingToggle, TextStyle, TextField, Select, Card, Page, Popover, ColorPicker, Stack, hsbToRgb, rgbToHsb, rgbString } from '@shopify/polaris';\nimport axios from 'axios';\nimport \"@shopify/polaris/styles.css\";\n\nclass Postsettings extends React.Component {\n  constructor(props) {\n    super(props);\n    const allsetting = props.settings;\n\n    if (allsetting != false) {\n      let shopbackgroundcolordata = '';\n\n      if (allsetting.shopbackgroundcolor) {\n        shopbackgroundcolordata = JSON.parse(allsetting.shopbackgroundcolor);\n      } else {\n        shopbackgroundcolordata = {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        };\n      }\n\n      let shoptextcolordata = '';\n\n      if (allsetting.shoptextcolor) {\n        shoptextcolordata = JSON.parse(allsetting.shoptextcolor);\n      } else {\n        shoptextcolordata = {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        };\n      }\n\n      let shop_heading_value = '';\n\n      if (allsetting.shop_heading_value) {\n        shop_heading_value = allsetting.shop_heading_value;\n      }\n\n      let shop_button = false;\n      let shop_button_name = 'Enable';\n\n      if (allsetting.shop_button) {\n        if (allsetting.shop_button == 'true') {\n          shop_button = false;\n          shop_button_name = 'Enable';\n        } else {\n          shop_button = true;\n          shop_button_name = 'Disable';\n        }\n      }\n\n      this.state = {\n        shopbackgroundcolor: shopbackgroundcolordata,\n        backgroundpopoverActive: false,\n        shoptextcolor: shoptextcolordata,\n        textpopoverActive: false,\n        shop_button: shop_button,\n        shop_button_name: shop_button_name,\n        shop_heading_value: shop_heading_value\n      };\n    } else {\n      this.state = {\n        shopbackgroundcolor: {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        },\n        backgroundpopoverActive: false,\n        shoptextcolor: {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        },\n        textpopoverActive: false,\n        shop_button: false,\n        shop_button_name: 'Enable',\n        shop_heading_value: '',\n        button_type: false,\n        notification_status: false\n      };\n    }\n\n    this.handlebackgroundColorChange = this.handlebackgroundColorChange.bind(this);\n    this.handlebackgroundRgbChange = this.handlebackgroundRgbChange.bind(this);\n    this.handlebackgroundPopoverClose = this.handlebackgroundPopoverClose.bind(this);\n    this.handlebackgroundPopoverOpen = this.handlebackgroundPopoverOpen.bind(this);\n    this.handletextColorChange = this.handletextColorChange.bind(this);\n    this.handletextRgbChange = this.handletextRgbChange.bind(this);\n    this.handletextPopoverClose = this.handletextPopoverClose.bind(this);\n    this.handletextPopoverOpen = this.handletextPopoverOpen.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleShopheading = this.handleShopheading.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    this.setState({\n      button_type: true\n    });\n    const search = window.location.search; // could be '?foo=bar'\n\n    const params = new URLSearchParams(search);\n    const shop_name = params.get('shop');\n    const postdata = {\n      option: 4,\n      shop: shop_name,\n      settings: this.state\n    };\n    const self = this;\n    axios.post('http://localhost:5000/save_settings/', postdata).then(function (response1) {\n      self.changestatus();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  changestatus() {\n    this.setState({\n      button_type: false,\n      notification_status: true\n    });\n  }\n\n  handlebackgroundColorChange(shopbackgroundcolor) {\n    this.setState({\n      shopbackgroundcolor\n    });\n  }\n\n  handlebackgroundRgbChange(value) {\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n    const shopbackgroundcolor = rgbToHsb({\n      red: rgbValues[0],\n      green: rgbValues[1],\n      blue: rgbValues[2],\n      alpha: rgbValues[3]\n    });\n    this.setState({\n      shopbackgroundcolor\n    });\n  }\n\n  handlebackgroundPopoverClose() {\n    this.setState({\n      backgroundpopoverActive: false\n    });\n  }\n\n  handlebackgroundPopoverOpen() {\n    this.setState({\n      backgroundpopoverActive: true\n    });\n  }\n\n  handletextColorChange(shoptextcolor) {\n    this.setState({\n      shoptextcolor\n    });\n  }\n\n  handletextRgbChange(value) {\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n    console.log(rgbValues);\n    const shoptextcolor = rgbToHsb({\n      red: rgbValues[0],\n      green: rgbValues[1],\n      blue: rgbValues[2],\n      alpha: rgbValues[3]\n    });\n    this.setState({\n      shoptextcolor\n    });\n  }\n\n  handletextPopoverClose() {\n    this.setState({\n      textpopoverActive: false\n    });\n  }\n\n  handletextPopoverOpen() {\n    this.setState({\n      textpopoverActive: true\n    });\n  }\n\n  handleShopheading(value) {\n    this.setState({\n      shop_heading_value: value\n    });\n  }\n\n  handleToggle() {\n    if (this.state.shop_button == false) {\n      this.setState({\n        shop_button: true,\n        shop_button_name: 'Disable'\n      });\n    } else {\n      this.setState({\n        shop_button: false,\n        shop_button_name: 'Enable'\n      });\n    }\n  }\n\n  render() {\n    const {\n      shopbackgroundcolor,\n      backgroundpopoverActive\n    } = this.state;\n    const backgroundrgbaColor = rgbString(hsbToRgb(shopbackgroundcolor));\n\n    const backgroundactivator = __jsx(Button, {\n      onClick: this.handlebackgroundPopoverOpen\n    }, __jsx(Stack, {\n      alignment: \"center\",\n      spacing: \"tight\"\n    }, __jsx(\"div\", {\n      style: {\n        height: \"2rem\",\n        width: \"2rem\",\n        borderRadius: \"0.3rem\",\n        background: backgroundrgbaColor\n      }\n    }), __jsx(\"span\", null, \"Background color\")));\n\n    const {\n      shoptextcolor,\n      textpopoverActive\n    } = this.state;\n    const textrgbaColor = rgbString(hsbToRgb(shoptextcolor));\n\n    const textactivator = __jsx(Button, {\n      onClick: this.handletextPopoverOpen\n    }, __jsx(Stack, {\n      alignment: \"center\",\n      spacing: \"tight\"\n    }, __jsx(\"div\", {\n      style: {\n        height: \"2rem\",\n        width: \"2rem\",\n        borderRadius: \"0.3rem\",\n        background: textrgbaColor\n      }\n    }), __jsx(\"span\", null, \"Text color\")));\n\n    let notification;\n\n    if (this.state.notification_status == true) {\n      notification = __jsx(Toast, {\n        content: \"Save Successfully\",\n        onDismiss: this.handlehsbToRgbtoggleActive,\n        active: true\n      });\n    }\n\n    return __jsx(\"div\", null, __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(FormLayout, null, __jsx(Heading, null, \"Shop Button Settings\"), __jsx(FormLayout.Group, null, __jsx(Popover, {\n      active: backgroundpopoverActive,\n      activator: backgroundactivator,\n      onClose: this.handlebackgroundPopoverClose\n    }, __jsx(Popover.Section, null, __jsx(ColorPicker, {\n      onChange: this.handlebackgroundColorChange,\n      color: shopbackgroundcolor,\n      allowAlpha: true\n    })), __jsx(Popover.Section, null, __jsx(TextField, {\n      value: backgroundrgbaColor,\n      onChange: this.handlebackgroundRgbChange\n    }))), __jsx(Popover, {\n      active: textpopoverActive,\n      activator: textactivator,\n      onClose: this.handletextPopoverClose\n    }, __jsx(Popover.Section, null, __jsx(ColorPicker, {\n      onChange: this.handletextColorChange,\n      color: shoptextcolor,\n      allowAlpha: true\n    })), __jsx(Popover.Section, null, __jsx(TextField, {\n      value: textrgbaColor,\n      onChange: this.handletextRgbChange\n    })))), __jsx(FormLayout.Group, null, __jsx(SettingToggle, {\n      action: {\n        content: this.state.shop_button_name,\n        onAction: this.handleToggle\n      },\n      enabled: this.state.shop_button\n    }), __jsx(TextField, {\n      label: \"Shop Button Heading\",\n      value: this.state.shop_heading_value,\n      onChange: this.handleShopheading\n    })), __jsx(Button, {\n      submit: true,\n      loading: this.state.button_type,\n      primary: true\n    }, \"Submit\"))), notification);\n  }\n\n}\n\nexport default Postsettings;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/shop.js"],"names":["React","Heading","Toast","Button","Checkbox","Form","FormLayout","SettingToggle","TextStyle","TextField","Select","Card","Page","Popover","ColorPicker","Stack","hsbToRgb","rgbToHsb","rgbString","axios","Postsettings","Component","constructor","props","allsetting","settings","shopbackgroundcolordata","shopbackgroundcolor","JSON","parse","hue","brightness","saturation","alpha","shoptextcolordata","shoptextcolor","shop_heading_value","shop_button","shop_button_name","state","backgroundpopoverActive","textpopoverActive","button_type","notification_status","handlebackgroundColorChange","bind","handlebackgroundRgbChange","handlebackgroundPopoverClose","handlebackgroundPopoverOpen","handletextColorChange","handletextRgbChange","handletextPopoverClose","handletextPopoverOpen","handleToggle","handleShopheading","handleSubmit","setState","search","window","location","params","URLSearchParams","shop_name","get","postdata","option","shop","self","post","then","response1","changestatus","catch","error","console","log","value","rgbValues","replace","split","red","green","blue","render","backgroundrgbaColor","backgroundactivator","height","width","borderRadius","background","textrgbaColor","textactivator","notification","handlehsbToRgbtoggleActive","content","onAction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Heading,Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        if(allsetting!=false){\n\n            let shopbackgroundcolordata = '';\n            if(allsetting.shopbackgroundcolor){\n                shopbackgroundcolordata = JSON.parse(allsetting.shopbackgroundcolor);\n            }else{\n                shopbackgroundcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let shoptextcolordata = '';\n            if(allsetting.shoptextcolor){\n                shoptextcolordata = JSON.parse(allsetting.shoptextcolor);\n            }else{\n                shoptextcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let shop_heading_value = '';\n            if(allsetting.shop_heading_value){\n                shop_heading_value = allsetting.shop_heading_value;\n            }\n\n\n            let shop_button = false;\n            let shop_button_name = 'Enable';\n            if(allsetting.shop_button){\n                if(allsetting.shop_button == 'true'){\n                    shop_button  =  false;\n                    shop_button_name  =  'Enable';\n                }else{\n                    shop_button  =  true;\n                    shop_button_name  =  'Disable';\n                }\n            }\n\n            this.state = {\n                shopbackgroundcolor: shopbackgroundcolordata,\n                backgroundpopoverActive: false,\n                shoptextcolor: shoptextcolordata,\n                textpopoverActive: false,\n                shop_button : shop_button,\n                shop_button_name : shop_button_name,\n                shop_heading_value : shop_heading_value\n            }\n        }else{\n            this.state = {\n                shopbackgroundcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                backgroundpopoverActive: false,\n                shoptextcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                textpopoverActive: false,\n                shop_button : false,\n                shop_button_name : 'Enable',\n                shop_heading_value : '',\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n        this.handlebackgroundColorChange = this.handlebackgroundColorChange.bind(this);\n        this.handlebackgroundRgbChange = this.handlebackgroundRgbChange.bind(this);\n        this.handlebackgroundPopoverClose = this.handlebackgroundPopoverClose.bind(this);\n        this.handlebackgroundPopoverOpen = this.handlebackgroundPopoverOpen.bind(this);\n\n        this.handletextColorChange = this.handletextColorChange.bind(this);\n        this.handletextRgbChange = this.handletextRgbChange.bind(this);\n        this.handletextPopoverClose = this.handletextPopoverClose.bind(this);\n        this.handletextPopoverOpen = this.handletextPopoverOpen.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleShopheading = this.handleShopheading.bind(this);\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 4,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n\n    handlebackgroundColorChange(shopbackgroundcolor) {\n        this.setState({ shopbackgroundcolor });\n    }\n\n\n    handlebackgroundRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        const shopbackgroundcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ shopbackgroundcolor });\n    }\n\n\n    handlebackgroundPopoverClose() {\n        this.setState({ backgroundpopoverActive: false });\n    }\n\n\n    handlebackgroundPopoverOpen() {\n        this.setState({\n            backgroundpopoverActive : true\n        })\n    }\n\n\n    handletextColorChange(shoptextcolor) {\n        this.setState({ shoptextcolor });\n    }\n\n\n    handletextRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const shoptextcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ shoptextcolor });\n    }\n\n\n    handletextPopoverClose() {\n        this.setState({ textpopoverActive: false });\n    }\n\n\n    handletextPopoverOpen() {\n        this.setState({\n            textpopoverActive : true\n        })\n    }\n\n    handleShopheading(value){\n        this.setState({\n            shop_heading_value: value\n        })\n    }\n\n    handleToggle(){\n\n        if(this.state.shop_button == false) {\n            this.setState({\n                shop_button : true,\n                shop_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                shop_button : false,\n                shop_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    render() {\n\n        const { shopbackgroundcolor, backgroundpopoverActive } = this.state;\n\n        const backgroundrgbaColor = rgbString(hsbToRgb(shopbackgroundcolor));\n\n        const backgroundactivator = (\n            <Button onClick={this.handlebackgroundPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: backgroundrgbaColor\n                        }}\n                    />\n                    <span>Background color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { shoptextcolor, textpopoverActive } = this.state;\n\n        const textrgbaColor = rgbString(hsbToRgb(shoptextcolor));\n\n        const textactivator = (\n            <Button onClick={this.handletextPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: textrgbaColor\n                        }}\n                    />\n                    <span>Text color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handlehsbToRgbtoggleActive} active />\n            );\n        }\n\n\n        return <div>\n            <Form\n                onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <Heading>Shop Button Settings</Heading>\n\n                    <FormLayout.Group>\n\n                        <Popover\n                            active={backgroundpopoverActive}\n                            activator={backgroundactivator}\n                            onClose={this.handlebackgroundPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handlebackgroundColorChange}\n                                    color={shopbackgroundcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={backgroundrgbaColor} onChange={this.handlebackgroundRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                        <Popover\n                            active={textpopoverActive}\n                            activator={textactivator}\n                            onClose={this.handletextPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handletextColorChange}\n                                    color={shoptextcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={textrgbaColor} onChange={this.handletextRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <SettingToggle\n                            action={{\n                                content: this.state.shop_button_name,\n                                onAction: this.handleToggle,\n                            }}\n                            enabled={this.state.shop_button}\n                        />\n\n                        <TextField label=\"Shop Button Heading\" value={this.state.shop_heading_value} onChange={this.handleShopheading} />\n\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n            {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n"]},"metadata":{},"sourceType":"module"}