{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Heading, Toast, Button, Checkbox, Form, FormLayout, SettingToggle, TextStyle, TextField, Select, Card, Page, Popover, ColorPicker, Stack, hsbToRgb, rgbToHsb, rgbString } from '@shopify/polaris';\nimport axios from 'axios';\nimport \"@shopify/polaris/styles.css\";\n\nvar Postsettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Postsettings, _React$Component);\n\n  var _super = _createSuper(Postsettings);\n\n  function Postsettings(props) {\n    var _this;\n\n    _classCallCheck(this, Postsettings);\n\n    _this = _super.call(this, props);\n    var allsetting = props.settings;\n\n    if (allsetting != false) {\n      var shopbackgroundcolordata = '';\n\n      if (allsetting.shopbackgroundcolor) {\n        shopbackgroundcolordata = JSON.parse(allsetting.shopbackgroundcolor);\n      } else {\n        shopbackgroundcolordata = {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        };\n      }\n\n      var shoptextcolordata = '';\n\n      if (allsetting.shoptextcolor) {\n        shoptextcolordata = JSON.parse(allsetting.shoptextcolor);\n      } else {\n        shoptextcolordata = {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        };\n      }\n\n      var shop_heading_value = '';\n\n      if (allsetting.shop_heading_value) {\n        shop_heading_value = allsetting.shop_heading_value;\n      }\n\n      var shop_button = false;\n      var shop_button_name = 'Enable';\n\n      if (allsetting.shop_button) {\n        if (allsetting.shop_button == 'true') {\n          shop_button = false;\n          shop_button_name = 'Enable';\n        } else {\n          shop_button = true;\n          shop_button_name = 'Disable';\n        }\n      }\n\n      _this.state = {\n        shopbackgroundcolor: shopbackgroundcolordata,\n        backgroundpopoverActive: false,\n        shoptextcolor: shoptextcolordata,\n        textpopoverActive: false,\n        shop_button: shop_button,\n        shop_button_name: shop_button_name,\n        shop_heading_value: shop_heading_value\n      };\n    } else {\n      _this.state = {\n        shopbackgroundcolor: {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        },\n        backgroundpopoverActive: false,\n        shoptextcolor: {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        },\n        textpopoverActive: false,\n        shop_button: false,\n        shop_button_name: 'Enable',\n        shop_heading_value: '',\n        button_type: false,\n        notification_status: false\n      };\n    }\n\n    _this.handlebackgroundColorChange = _this.handlebackgroundColorChange.bind(_assertThisInitialized(_this));\n    _this.handlebackgroundRgbChange = _this.handlebackgroundRgbChange.bind(_assertThisInitialized(_this));\n    _this.handlebackgroundPopoverClose = _this.handlebackgroundPopoverClose.bind(_assertThisInitialized(_this));\n    _this.handlebackgroundPopoverOpen = _this.handlebackgroundPopoverOpen.bind(_assertThisInitialized(_this));\n    _this.handletextColorChange = _this.handletextColorChange.bind(_assertThisInitialized(_this));\n    _this.handletextRgbChange = _this.handletextRgbChange.bind(_assertThisInitialized(_this));\n    _this.handletextPopoverClose = _this.handletextPopoverClose.bind(_assertThisInitialized(_this));\n    _this.handletextPopoverOpen = _this.handletextPopoverOpen.bind(_assertThisInitialized(_this));\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_this));\n    _this.handleShopheading = _this.handleShopheading.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Postsettings, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.setState({\n        button_type: true\n      });\n      var search = window.location.search; // could be '?foo=bar'\n\n      var params = new URLSearchParams(search);\n      var shop_name = params.get('shop');\n      var postdata = {\n        option: 4,\n        shop: shop_name,\n        settings: this.state\n      };\n      var self = this;\n      axios.post('http://localhost:5000/save_settings/', postdata).then(function (response1) {\n        self.changestatus();\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"changestatus\",\n    value: function changestatus() {\n      this.setState({\n        button_type: false,\n        notification_status: true\n      });\n    }\n  }, {\n    key: \"handlebackgroundColorChange\",\n    value: function handlebackgroundColorChange(shopbackgroundcolor) {\n      this.setState({\n        shopbackgroundcolor: shopbackgroundcolor\n      });\n    }\n  }, {\n    key: \"handlebackgroundRgbChange\",\n    value: function handlebackgroundRgbChange(value) {\n      var rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n      var shopbackgroundcolor = rgbToHsb({\n        red: rgbValues[0],\n        green: rgbValues[1],\n        blue: rgbValues[2],\n        alpha: rgbValues[3]\n      });\n      this.setState({\n        shopbackgroundcolor: shopbackgroundcolor\n      });\n    }\n  }, {\n    key: \"handlebackgroundPopoverClose\",\n    value: function handlebackgroundPopoverClose() {\n      this.setState({\n        backgroundpopoverActive: false\n      });\n    }\n  }, {\n    key: \"handlebackgroundPopoverOpen\",\n    value: function handlebackgroundPopoverOpen() {\n      this.setState({\n        backgroundpopoverActive: true\n      });\n    }\n  }, {\n    key: \"handletextColorChange\",\n    value: function handletextColorChange(shoptextcolor) {\n      this.setState({\n        shoptextcolor: shoptextcolor\n      });\n    }\n  }, {\n    key: \"handletextRgbChange\",\n    value: function handletextRgbChange(value) {\n      var rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n      console.log(rgbValues);\n      var shoptextcolor = rgbToHsb({\n        red: rgbValues[0],\n        green: rgbValues[1],\n        blue: rgbValues[2],\n        alpha: rgbValues[3]\n      });\n      this.setState({\n        shoptextcolor: shoptextcolor\n      });\n    }\n  }, {\n    key: \"handletextPopoverClose\",\n    value: function handletextPopoverClose() {\n      this.setState({\n        textpopoverActive: false\n      });\n    }\n  }, {\n    key: \"handletextPopoverOpen\",\n    value: function handletextPopoverOpen() {\n      this.setState({\n        textpopoverActive: true\n      });\n    }\n  }, {\n    key: \"handleShopheading\",\n    value: function handleShopheading(value) {\n      this.setState({\n        shop_heading_value: value\n      });\n    }\n  }, {\n    key: \"handleToggle\",\n    value: function handleToggle() {\n      if (this.state.shop_button == false) {\n        this.setState({\n          shop_button: true,\n          shop_button_name: 'Disable'\n        });\n      } else {\n        this.setState({\n          shop_button: false,\n          shop_button_name: 'Enable'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          shopbackgroundcolor = _this$state.shopbackgroundcolor,\n          backgroundpopoverActive = _this$state.backgroundpopoverActive;\n      var backgroundrgbaColor = rgbString(hsbToRgb(shopbackgroundcolor));\n\n      var backgroundactivator = __jsx(Button, {\n        onClick: this.handlebackgroundPopoverOpen\n      }, __jsx(Stack, {\n        alignment: \"center\",\n        spacing: \"tight\"\n      }, __jsx(\"div\", {\n        style: {\n          height: \"2rem\",\n          width: \"2rem\",\n          borderRadius: \"0.3rem\",\n          background: backgroundrgbaColor\n        }\n      }), __jsx(\"span\", null, \"Background color\")));\n\n      var _this$state2 = this.state,\n          shoptextcolor = _this$state2.shoptextcolor,\n          textpopoverActive = _this$state2.textpopoverActive;\n      var textrgbaColor = rgbString(hsbToRgb(shoptextcolor));\n\n      var textactivator = __jsx(Button, {\n        onClick: this.handletextPopoverOpen\n      }, __jsx(Stack, {\n        alignment: \"center\",\n        spacing: \"tight\"\n      }, __jsx(\"div\", {\n        style: {\n          height: \"2rem\",\n          width: \"2rem\",\n          borderRadius: \"0.3rem\",\n          background: textrgbaColor\n        }\n      }), __jsx(\"span\", null, \"Text color\")));\n\n      var notification;\n\n      if (this.state.notification_status == true) {\n        notification = __jsx(Toast, {\n          content: \"Save Successfully\",\n          onDismiss: this.handlehsbToRgbtoggleActive,\n          active: true\n        });\n      }\n\n      return __jsx(\"div\", null, __jsx(Form, {\n        onSubmit: this.handleSubmit\n      }, __jsx(FormLayout, null, __jsx(Heading, null, \"Shop Button Settings\"), __jsx(FormLayout.Group, null, __jsx(Popover, {\n        active: backgroundpopoverActive,\n        activator: backgroundactivator,\n        onClose: this.handlebackgroundPopoverClose\n      }, __jsx(Popover.Section, null, __jsx(ColorPicker, {\n        onChange: this.handlebackgroundColorChange,\n        color: shopbackgroundcolor,\n        allowAlpha: true\n      })), __jsx(Popover.Section, null, __jsx(TextField, {\n        value: backgroundrgbaColor,\n        onChange: this.handlebackgroundRgbChange\n      }))), __jsx(Popover, {\n        active: textpopoverActive,\n        activator: textactivator,\n        onClose: this.handletextPopoverClose\n      }, __jsx(Popover.Section, null, __jsx(ColorPicker, {\n        onChange: this.handletextColorChange,\n        color: shoptextcolor,\n        allowAlpha: true\n      })), __jsx(Popover.Section, null, __jsx(TextField, {\n        value: textrgbaColor,\n        onChange: this.handletextRgbChange\n      })))), __jsx(FormLayout.Group, null, __jsx(SettingToggle, {\n        action: {\n          content: this.state.shop_button_name,\n          onAction: this.handleToggle\n        },\n        enabled: this.state.shop_button\n      }), __jsx(TextField, {\n        label: \"Shop Button Heading\",\n        value: this.state.shop_heading_value,\n        onChange: this.handleShopheading\n      })), __jsx(Button, {\n        submit: true,\n        loading: this.state.button_type,\n        primary: true\n      }, \"Submit\"))), notification);\n    }\n  }]);\n\n  return Postsettings;\n}(React.Component);\n\nexport default Postsettings;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/shop.js"],"names":["React","Heading","Toast","Button","Checkbox","Form","FormLayout","SettingToggle","TextStyle","TextField","Select","Card","Page","Popover","ColorPicker","Stack","hsbToRgb","rgbToHsb","rgbString","axios","Postsettings","props","allsetting","settings","shopbackgroundcolordata","shopbackgroundcolor","JSON","parse","hue","brightness","saturation","alpha","shoptextcolordata","shoptextcolor","shop_heading_value","shop_button","shop_button_name","state","backgroundpopoverActive","textpopoverActive","button_type","notification_status","handlebackgroundColorChange","bind","handlebackgroundRgbChange","handlebackgroundPopoverClose","handlebackgroundPopoverOpen","handletextColorChange","handletextRgbChange","handletextPopoverClose","handletextPopoverOpen","handleToggle","handleShopheading","handleSubmit","setState","search","window","location","params","URLSearchParams","shop_name","get","postdata","option","shop","self","post","then","response1","changestatus","error","console","log","value","rgbValues","replace","split","red","green","blue","backgroundrgbaColor","backgroundactivator","height","width","borderRadius","background","textrgbaColor","textactivator","notification","handlehsbToRgbtoggleActive","content","onAction","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Heading,Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        if(allsetting!=false){\n\n            let shopbackgroundcolordata = '';\n            if(allsetting.shopbackgroundcolor){\n                shopbackgroundcolordata = JSON.parse(allsetting.shopbackgroundcolor);\n            }else{\n                shopbackgroundcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let shoptextcolordata = '';\n            if(allsetting.shoptextcolor){\n                shoptextcolordata = JSON.parse(allsetting.shoptextcolor);\n            }else{\n                shoptextcolordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let shop_heading_value = '';\n            if(allsetting.shop_heading_value){\n                shop_heading_value = allsetting.shop_heading_value;\n            }\n\n            let shop_button = false;\n            let shop_button_name = 'Enable';\n            if(allsetting.shop_button){\n                if(allsetting.shop_button == 'true'){\n                    shop_button  =  false;\n                    shop_button_name  =  'Enable';\n                }else{\n                    shop_button  =  true;\n                    shop_button_name  =  'Disable';\n                }\n            }\n\n            this.state = {\n                shopbackgroundcolor: shopbackgroundcolordata,\n                backgroundpopoverActive: false,\n                shoptextcolor: shoptextcolordata,\n                textpopoverActive: false,\n                shop_button : shop_button,\n                shop_button_name : shop_button_name,\n                shop_heading_value : shop_heading_value\n            }\n        }else{\n            this.state = {\n                shopbackgroundcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                backgroundpopoverActive: false,\n                shoptextcolor: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                textpopoverActive: false,\n                shop_button : false,\n                shop_button_name : 'Enable',\n                shop_heading_value : '',\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n        this.handlebackgroundColorChange = this.handlebackgroundColorChange.bind(this);\n        this.handlebackgroundRgbChange = this.handlebackgroundRgbChange.bind(this);\n        this.handlebackgroundPopoverClose = this.handlebackgroundPopoverClose.bind(this);\n        this.handlebackgroundPopoverOpen = this.handlebackgroundPopoverOpen.bind(this);\n\n        this.handletextColorChange = this.handletextColorChange.bind(this);\n        this.handletextRgbChange = this.handletextRgbChange.bind(this);\n        this.handletextPopoverClose = this.handletextPopoverClose.bind(this);\n        this.handletextPopoverOpen = this.handletextPopoverOpen.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleShopheading = this.handleShopheading.bind(this);\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 4,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n\n    handlebackgroundColorChange(shopbackgroundcolor) {\n        this.setState({ shopbackgroundcolor });\n    }\n\n\n    handlebackgroundRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        const shopbackgroundcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ shopbackgroundcolor });\n    }\n\n\n    handlebackgroundPopoverClose() {\n        this.setState({ backgroundpopoverActive: false });\n    }\n\n\n    handlebackgroundPopoverOpen() {\n        this.setState({\n            backgroundpopoverActive : true\n        })\n    }\n\n\n    handletextColorChange(shoptextcolor) {\n        this.setState({ shoptextcolor });\n    }\n\n\n    handletextRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const shoptextcolor = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ shoptextcolor });\n    }\n\n\n    handletextPopoverClose() {\n        this.setState({ textpopoverActive: false });\n    }\n\n\n    handletextPopoverOpen() {\n        this.setState({\n            textpopoverActive : true\n        })\n    }\n\n    handleShopheading(value){\n        this.setState({\n            shop_heading_value: value\n        })\n    }\n\n    handleToggle(){\n\n        if(this.state.shop_button == false) {\n            this.setState({\n                shop_button : true,\n                shop_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                shop_button : false,\n                shop_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    render() {\n\n        const { shopbackgroundcolor, backgroundpopoverActive } = this.state;\n\n        const backgroundrgbaColor = rgbString(hsbToRgb(shopbackgroundcolor));\n\n        const backgroundactivator = (\n            <Button onClick={this.handlebackgroundPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: backgroundrgbaColor\n                        }}\n                    />\n                    <span>Background color</span>\n                </Stack>\n            </Button>\n        );\n\n        const { shoptextcolor, textpopoverActive } = this.state;\n\n        const textrgbaColor = rgbString(hsbToRgb(shoptextcolor));\n\n        const textactivator = (\n            <Button onClick={this.handletextPopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: textrgbaColor\n                        }}\n                    />\n                    <span>Text color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handlehsbToRgbtoggleActive} active />\n            );\n        }\n\n\n        return <div>\n            <Form\n                onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <Heading>Shop Button Settings</Heading>\n\n                    <FormLayout.Group>\n\n                        <Popover\n                            active={backgroundpopoverActive}\n                            activator={backgroundactivator}\n                            onClose={this.handlebackgroundPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handlebackgroundColorChange}\n                                    color={shopbackgroundcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={backgroundrgbaColor} onChange={this.handlebackgroundRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                        <Popover\n                            active={textpopoverActive}\n                            activator={textactivator}\n                            onClose={this.handletextPopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handletextColorChange}\n                                    color={shoptextcolor}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={textrgbaColor} onChange={this.handletextRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <SettingToggle\n                            action={{\n                                content: this.state.shop_button_name,\n                                onAction: this.handleToggle,\n                            }}\n                            enabled={this.state.shop_button}\n                        />\n\n                        <TextField label=\"Shop Button Heading\" value={this.state.shop_heading_value} onChange={this.handleShopheading} />\n\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n            {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n"]},"metadata":{},"sourceType":"module"}