{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Toast, Button, Checkbox, Form, FormLayout, SettingToggle, TextStyle, TextField, Select, Card, Page, Popover, ColorPicker, Stack, hsbToRgb, rgbToHsb, rgbString } from '@shopify/polaris';\nimport axios from 'axios';\nimport \"@shopify/polaris/styles.css\";\n\nclass Postsettings extends React.Component {\n  constructor(props) {\n    super(props);\n    const allsetting = props.settings;\n    console.log(allsetting);\n\n    if (allsetting != false) {\n      let colordata = '';\n\n      if (allsetting.color != '') {\n        colordata = JSON.parse(allsetting.color);\n      } else {\n        colordata = {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        };\n      }\n\n      let display_border = false;\n      let display_border_button_name = 'Enable';\n\n      if (allsetting.display_border != '') {\n        if (allsetting.display_border == false) {\n          display_border = false;\n          display_border_button_name = 'Enable';\n        } else {\n          display_border = true;\n          display_border_button_name = 'Disable';\n        }\n      }\n\n      let social_sharing = false;\n      let social_sharing_button_name = 'Enable';\n\n      if (allsetting.social_sharing != '') {\n        if (allsetting.social_sharing == false) {\n          social_sharing = false;\n          social_sharing_button_name = 'Enable';\n        } else {\n          social_sharing = true;\n          social_sharing_button_name = 'Disable';\n        }\n      }\n\n      this.state = {\n        color: colordata,\n        popoverActive: allsetting.popover_active,\n        checkwidget: allsetting.check_widget,\n        checkhover: allsetting.check_hover,\n        display_border: display_border,\n        display_border_button_name: display_border_button_name,\n        social_sharing: social_sharing,\n        social_sharing_button_name: social_sharing_button_name,\n        border_width_value: allsetting.border_width_value,\n        widget_heading_value: allsetting.widget_heading_value,\n        layout_column_value: allsetting.border_width_value,\n        layout_row_value: allsetting.layout_row_value,\n        padding_value: allsetting.padding_value\n      };\n    } else {\n      this.state = {\n        color: {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        },\n        popoverActive: false,\n        checkwidget: 'grid',\n        checkhover: 'zoom_out',\n        display_border: false,\n        display_border_button_name: 'Enable',\n        social_sharing: false,\n        social_sharing_button_name: 'Enable',\n        border_width_value: 1,\n        widget_heading_value: '',\n        layout_column_value: 6,\n        layout_row_value: 2,\n        padding_value: 1,\n        button_type: false,\n        notification_status: false\n      };\n    }\n\n    this.handlePopoverOpen = this.handlePopoverOpen.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.handleRgbChange = this.handleRgbChange.bind(this);\n    this.handlePopoverClose = this.handlePopoverClose.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleSelectHoveeffect = this.handleSelectHoveeffect.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleToggleSocial = this.handleToggleSocial.bind(this);\n    this.handleBorderwidth = this.handleBorderwidth.bind(this);\n    this.handleWidgetheading = this.handleWidgetheading.bind(this);\n    this.handleLayoutCol = this.handleLayoutCol.bind(this);\n    this.handleLayoutRow = this.handleLayoutRow.bind(this);\n    this.handlePadding = this.handlePadding.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.changestatus = this.changestatus.bind(this);\n    this.handletoggleActive = this.handletoggleActive.bind(this);\n  }\n\n  handleSubmit() {\n    this.setState({\n      button_type: true\n    });\n    const search = window.location.search; // could be '?foo=bar'\n\n    const params = new URLSearchParams(search);\n    const shop_name = params.get('shop');\n    const postdata = {\n      option: 1,\n      shop: shop_name,\n      settings: this.state\n    };\n    const self = this;\n    axios.post('http://localhost:5000/save_settings/', postdata).then(function (response1) {\n      self.changestatus();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  changestatus() {\n    this.setState({\n      button_type: false,\n      notification_status: true\n    });\n  }\n\n  handleColorChange(color) {\n    this.setState({\n      color\n    });\n  }\n\n  handleRgbChange(value) {\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n    console.log(rgbValues);\n    const color = rgbToHsb({\n      red: rgbValues[0],\n      green: rgbValues[1],\n      blue: rgbValues[2],\n      alpha: rgbValues[3]\n    });\n    this.setState({\n      color\n    });\n  }\n\n  handlePopoverClose() {\n    this.setState({\n      popoverActive: false\n    });\n  }\n\n  handlePopoverOpen() {\n    this.setState({\n      popoverActive: true\n    });\n  }\n\n  handleSelectChange(value) {\n    this.setState({\n      checkwidget: value\n    });\n  }\n\n  handleSelectHoveeffect(value) {\n    this.setState({\n      checkhover: value\n    });\n  }\n\n  handleToggle() {\n    if (this.state.display_border == false) {\n      this.setState({\n        display_border: true,\n        display_border_button_name: 'Disable'\n      });\n    } else {\n      this.setState({\n        display_border: false,\n        display_border_button_name: 'Enable'\n      });\n    }\n  }\n\n  handleToggleSocial() {\n    if (this.state.social_sharing == false) {\n      this.setState({\n        social_sharing: true,\n        social_sharing_button_name: 'Disable'\n      });\n    } else {\n      this.setState({\n        social_sharing: false,\n        social_sharing_button_name: 'Enable'\n      });\n    }\n  }\n\n  handleBorderwidth(value) {\n    this.setState({\n      border_width_value: value\n    });\n  }\n\n  handleWidgetheading(value) {\n    this.setState({\n      widget_heading_value: value\n    });\n  }\n\n  handleLayoutCol(value) {\n    this.setState({\n      layout_column_value: value\n    });\n  }\n\n  handleLayoutRow(value) {\n    this.setState({\n      layout_row_value: value\n    });\n  }\n\n  handlePadding(value) {\n    this.setState({\n      padding_value: value\n    });\n  }\n\n  handletoggleActive() {\n    if (this.state.notification_status == false) {\n      this.setState({\n        notification_status: true\n      });\n    } else {\n      this.setState({\n        notification_status: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      color,\n      popoverActive\n    } = this.state;\n    const rgbaColor = rgbString(hsbToRgb(color));\n\n    const activator = __jsx(Button, {\n      onClick: this.handlePopoverOpen\n    }, __jsx(Stack, {\n      alignment: \"center\",\n      spacing: \"tight\"\n    }, __jsx(\"div\", {\n      style: {\n        height: \"2rem\",\n        width: \"2rem\",\n        borderRadius: \"0.3rem\",\n        background: rgbaColor\n      }\n    }), __jsx(\"span\", null, \"Border color\")));\n\n    let notification;\n\n    if (this.state.notification_status == true) {\n      notification = __jsx(Toast, {\n        content: \"Save Successfully\",\n        onDismiss: this.handletoggleActive,\n        active: true\n      });\n    }\n\n    const options = [{\n      label: 'Grid',\n      value: 'grid'\n    }, {\n      label: 'List',\n      value: 'list'\n    }];\n    const options1 = [{\n      label: 'Zoom Out',\n      value: 'zoom_out'\n    }, {\n      label: 'Zoom In',\n      value: 'zoom_in'\n    }];\n    return __jsx(\"div\", null, __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(Select, {\n      label: \"Widget Type\",\n      options: options,\n      onChange: this.handleSelectChange,\n      value: this.state.checkwidget\n    }), __jsx(Select, {\n      label: \"Hover Effect\",\n      options: options1,\n      onChange: this.handleSelectHoveeffect,\n      value: this.state.checkhover\n    }), __jsx(SettingToggle, {\n      action: {\n        content: this.state.display_border_button_name,\n        onAction: this.handleToggle\n      },\n      enabled: this.state.display_border\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      type: \"number\",\n      label: \"Layout Columns\",\n      value: this.state.layout_column_value,\n      onChange: this.handleLayoutCol\n    }), __jsx(TextField, {\n      type: \"number\",\n      label: \"Layout Rows\",\n      value: this.state.layout_row_value,\n      onChange: this.handleLayoutRow\n    }), __jsx(SettingToggle, {\n      action: {\n        content: this.state.social_sharing_button_name,\n        onAction: this.handleToggleSocial\n      },\n      enabled: this.state.social_sharing\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      label: \"Border Width\",\n      type: \"number\",\n      value: this.state.border_width_value,\n      onChange: this.handleBorderwidth,\n      connectedRight: __jsx(Select, {\n        label: \"Pixel Unit\",\n        labelHidden: true,\n        value: \"PX\",\n        options: ['PX'],\n        onChange: \"hello\"\n      })\n    }), __jsx(TextField, {\n      label: \"Widget Heading\",\n      value: this.state.widget_heading_value,\n      onChange: this.handleWidgetheading\n    }), __jsx(Popover, {\n      active: popoverActive,\n      activator: activator,\n      onClose: this.handlePopoverClose\n    }, __jsx(Popover.Section, null, __jsx(ColorPicker, {\n      onChange: this.handleColorChange,\n      color: color,\n      allowAlpha: true\n    })), __jsx(Popover.Section, null, __jsx(TextField, {\n      value: rgbaColor,\n      onChange: this.handleRgbChange\n    })))), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      label: \"Padding (Space Beetween Image)\",\n      type: \"number\",\n      value: this.state.padding_value,\n      onChange: this.handlePadding,\n      connectedRight: __jsx(Select, {\n        label: \"Pixel Unit\",\n        labelHidden: true,\n        value: \"PX\",\n        options: ['PX'],\n        onChange: \"hello\"\n      })\n    })), __jsx(Button, {\n      submit: true,\n      loading: this.state.button_type,\n      primary: true\n    }, \"Submit\"))), notification);\n  }\n\n}\n\nexport default Postsettings;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/postsettings.js"],"names":["React","Toast","Button","Checkbox","Form","FormLayout","SettingToggle","TextStyle","TextField","Select","Card","Page","Popover","ColorPicker","Stack","hsbToRgb","rgbToHsb","rgbString","axios","Postsettings","Component","constructor","props","allsetting","settings","console","log","colordata","color","JSON","parse","hue","brightness","saturation","alpha","display_border","display_border_button_name","social_sharing","social_sharing_button_name","state","popoverActive","popover_active","checkwidget","check_widget","checkhover","check_hover","border_width_value","widget_heading_value","layout_column_value","layout_row_value","padding_value","button_type","notification_status","handlePopoverOpen","bind","handleColorChange","handleRgbChange","handlePopoverClose","handleSelectChange","handleSelectHoveeffect","handleToggle","handleToggleSocial","handleBorderwidth","handleWidgetheading","handleLayoutCol","handleLayoutRow","handlePadding","handleSubmit","changestatus","handletoggleActive","setState","search","window","location","params","URLSearchParams","shop_name","get","postdata","option","shop","self","post","then","response1","catch","error","value","rgbValues","replace","split","red","green","blue","render","rgbaColor","activator","height","width","borderRadius","background","notification","options","label","options1","content","onAction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        console.log(allsetting);\n        if(allsetting!=false){\n\n            let colordata = '';\n            if(allsetting.color!=''){\n              colordata = JSON.parse(allsetting.color);\n            }else{\n              colordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let display_border = false;\n            let display_border_button_name = 'Enable';\n            if(allsetting.display_border!=''){\n                if(allsetting.display_border == false){\n                    display_border  =  false;\n                    display_border_button_name  =  'Enable';\n                }else{\n                    display_border  =  true;\n                    display_border_button_name  =  'Disable';\n                }\n            }\n\n            let social_sharing = false;\n            let social_sharing_button_name = 'Enable';\n            if(allsetting.social_sharing!=''){\n                if(allsetting.social_sharing == false){\n                    social_sharing  =  false;\n                    social_sharing_button_name  =  'Enable';\n                }else{\n                    social_sharing  =  true;\n                    social_sharing_button_name  =  'Disable';\n                }\n            }\n\n\n            this.state = {\n                color: colordata,\n                popoverActive: allsetting.popover_active,\n                checkwidget : allsetting.check_widget,\n                checkhover : allsetting.check_hover,\n                display_border : display_border,\n                display_border_button_name : display_border_button_name,\n                social_sharing : social_sharing,\n                social_sharing_button_name : social_sharing_button_name,\n                border_width_value : allsetting.border_width_value,\n                widget_heading_value: allsetting.widget_heading_value,\n                layout_column_value : allsetting.border_width_value,\n                layout_row_value : allsetting.layout_row_value,\n                padding_value : allsetting.padding_value\n            }\n        }else{\n            this.state = {\n                color: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                popoverActive: false,\n                checkwidget : 'grid',\n                checkhover : 'zoom_out',\n                display_border : false,\n                display_border_button_name : 'Enable',\n                social_sharing : false,\n                social_sharing_button_name : 'Enable',\n                border_width_value : 1,\n                widget_heading_value: '',\n                layout_column_value : 6,\n                layout_row_value : 2,\n                padding_value : 1,\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n\n\n        this.handlePopoverOpen = this.handlePopoverOpen.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleRgbChange = this.handleRgbChange.bind(this);\n        this.handlePopoverClose = this.handlePopoverClose.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleSelectHoveeffect = this.handleSelectHoveeffect.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleToggleSocial = this.handleToggleSocial.bind(this);\n        this.handleBorderwidth = this.handleBorderwidth.bind(this);\n        this.handleWidgetheading = this.handleWidgetheading.bind(this);\n        this.handleLayoutCol = this.handleLayoutCol.bind(this);\n        this.handleLayoutRow = this.handleLayoutRow.bind(this);\n        this.handlePadding = this.handlePadding.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.changestatus = this.changestatus.bind(this);\n        this.handletoggleActive = this.handletoggleActive.bind(this);\n\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 1,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n    handleColorChange(color) {\n        this.setState({ color });\n    }\n\n\n    handleRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const color = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ color });\n    }\n\n\n    handlePopoverClose() {\n        this.setState({ popoverActive: false });\n    }\n\n\n    handlePopoverOpen() {\n        this.setState({\n            popoverActive : true\n        })\n    }\n\n\n    handleSelectChange(value){\n        this.setState({\n            checkwidget :value\n        })\n    }\n\n    handleSelectHoveeffect(value){\n        this.setState({\n            checkhover :value\n        })\n    }\n\n    handleToggle(){\n\n        if(this.state.display_border == false) {\n            this.setState({\n                display_border : true,\n                display_border_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                display_border : false,\n                display_border_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    handleToggleSocial(){\n\n        if(this.state.social_sharing == false) {\n            this.setState({\n                social_sharing : true,\n                social_sharing_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                social_sharing : false,\n                social_sharing_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    handleBorderwidth(value){\n        this.setState({\n            border_width_value: value\n        })\n    }\n\n    handleWidgetheading(value){\n        this.setState({\n            widget_heading_value: value\n        })\n    }\n\n    handleLayoutCol(value){\n        this.setState({\n            layout_column_value: value\n        })\n    }\n\n    handleLayoutRow(value){\n        this.setState({\n            layout_row_value: value\n        })\n    }\n\n    handlePadding(value){\n        this.setState({\n            padding_value: value\n        })\n    }\n\n    handletoggleActive(){\n        if(this.state.notification_status==false){\n            this.setState({\n                notification_status : true\n            })\n        }else{\n            this.setState({\n                notification_status : false\n            })\n        }\n\n    }\n\n    render() {\n\n        const { color, popoverActive } = this.state;\n\n        const rgbaColor = rgbString(hsbToRgb(color));\n\n        const activator = (\n            <Button onClick={this.handlePopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: rgbaColor\n                        }}\n                    />\n                    <span>Border color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handletoggleActive} active />\n            );\n        }\n\n        const options = [\n            {label: 'Grid', value: 'grid'},\n            {label: 'List', value: 'list'}\n        ];\n\n        const options1 = [\n            {label: 'Zoom Out', value: 'zoom_out'},\n            {label: 'Zoom In', value: 'zoom_in'}\n        ];\n\n\n        return <div>\n            <Form\n                 onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <FormLayout.Group>\n\n                        <Select\n                            label=\"Widget Type\"\n                            options={options}\n                            onChange={this.handleSelectChange}\n                            value={this.state.checkwidget}\n                        />\n\n                        <Select\n                            label=\"Hover Effect\"\n                            options={options1}\n                            onChange={this.handleSelectHoveeffect}\n                            value={this.state.checkhover}\n                        />\n\n                        <SettingToggle\n                            action={{\n                                content: this.state.display_border_button_name,\n                                onAction: this.handleToggle,\n                            }}\n                            enabled={this.state.display_border}\n                        />\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField type=\"number\" label=\"Layout Columns\" value={this.state.layout_column_value} onChange={this.handleLayoutCol} />\n                        <TextField type=\"number\" label=\"Layout Rows\" value={this.state.layout_row_value} onChange={this.handleLayoutRow} />\n                        <SettingToggle\n                            action={{\n                                content: this.state.social_sharing_button_name,\n                                onAction: this.handleToggleSocial,\n                            }}\n                             enabled={this.state.social_sharing}\n                        />\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField\n                            label=\"Border Width\"\n                            type=\"number\"\n                            value={this.state.border_width_value}\n                            onChange={this.handleBorderwidth}\n                            connectedRight={\n                                <Select\n                                    label=\"Pixel Unit\"\n                                    labelHidden\n                                    value=\"PX\"\n                                    options={['PX']}\n                                    onChange =\"hello\"\n                                />\n                            }\n                        />\n\n                        <TextField label=\"Widget Heading\" value={this.state.widget_heading_value} onChange={this.handleWidgetheading} />\n                        <Popover\n                            active={popoverActive}\n                            activator={activator}\n                            onClose={this.handlePopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handleColorChange}\n                                    color={color}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={rgbaColor} onChange={this.handleRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField\n                            label=\"Padding (Space Beetween Image)\"\n                            type=\"number\"\n                            value={this.state.padding_value}\n                            onChange={this.handlePadding}\n                            connectedRight={\n                                <Select\n                                    label=\"Pixel Unit\"\n                                    labelHidden\n                                    value=\"PX\"\n                                    options={['PX']}\n                                    onChange =\"hello\"\n                                />\n                            }\n                        />\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n                {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n"]},"metadata":{},"sourceType":"module"}