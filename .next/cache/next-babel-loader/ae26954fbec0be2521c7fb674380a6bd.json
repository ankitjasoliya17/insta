{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useCallback, useState } from 'react';\nimport { Card, Tabs } from '@shopify/polaris';\n\nfunction FittedTabsExample() {\n  var _useState = useState(0),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelected(selectedTabIndex);\n  }, []);\n  var tabs = [{\n    id: 'all-gallary-setting',\n    content: 'Gallary Settings',\n    accessibilityLabel: 'Gallary Settings',\n    panelID: '<div class=\"ankit\">Hello</div>'\n  }, {\n    id: 'all-accepts-information',\n    content: 'Information1',\n    accessibilityLabel: 'Information',\n    panelID: 'all-accepts-information-fitted-Ccontent'\n  }, {\n    id: 'all-accepts-appereance',\n    content: 'Appereance1',\n    accessibilityLabel: 'Appereance',\n    panelID: 'all-accepts-appereance-fitted-Ccontent'\n  }, {\n    id: 'all-accepts-shop',\n    content: 'Shop1',\n    accessibilityLabel: 'Shop',\n    panelID: 'all-accepts-shop-fitted-Ccontent'\n  }];\n  var tabcontent;\n\n  if (selected == 0) {\n    tabcontent = '<div>Hello Tab 1</div>';\n  }\n\n  return __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange,\n    fitted: true\n  }, __jsx(Card.Section, {\n    title: tabs[selected].accessibilityLabel\n  }, tabcontent, __jsx(\"p\", null, \"Tab \", selected, \" selected\"), __jsx(\"p\", null), __jsx(\"p\", null, \"Tab \", selected, \" \", tabs[selected].content))));\n}\n\nvar Instasettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Instasettings, _React$Component);\n\n  var _super = _createSuper(Instasettings);\n\n  function Instasettings(props) {\n    _classCallCheck(this, Instasettings);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Instasettings, [{\n    key: \"render\",\n    value: function render() {\n      var selectedTab = this.state.selectedTab;\n      var tabs = [{\n        id: 'tab1',\n        title: 'something1',\n        panelID: 'panel2'\n      }, {\n        id: 'tab2',\n        title: 'something2',\n        panelID: 'panel2'\n      }];\n      var tabPanels = [__jsx(Tabs.Panel, {\n        id: \"panel1\"\n      }, \"something\"), __jsx(Tabs.Panel, {\n        id: \"panel2\"\n      }, \"something else\")];\n      return __jsx(\"div\", null, __jsx(Tabs, {\n        selected: selectedTab,\n        tabs: tabs,\n        onSelect: this.handleTabChange\n      }), tabPanels[selectedTab]);\n    }\n  }]);\n\n  return Instasettings;\n}(React.Component);\n\nexport default Instasettings;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/instasettings.js"],"names":["React","useCallback","useState","Card","Tabs","FittedTabsExample","selected","setSelected","handleTabChange","selectedTabIndex","tabs","id","content","accessibilityLabel","panelID","tabcontent","Instasettings","props","selectedTab","state","title","tabPanels","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,kBAAzB;;AAEA,SAASC,iBAAT,GAA6B;AAAA,kBACOH,QAAQ,CAAC,CAAD,CADf;AAAA,MAClBI,QADkB;AAAA,MACRC,WADQ;;AAGzB,MAAMC,eAAe,GAAGP,WAAW,CAC/B,UAACQ,gBAAD;AAAA,WAAsBF,WAAW,CAACE,gBAAD,CAAjC;AAAA,GAD+B,EAE/B,EAF+B,CAAnC;AAKA,MAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,EAAE,EAAE,qBADR;AAEIC,IAAAA,OAAO,EAAE,kBAFb;AAGIC,IAAAA,kBAAkB,EAAE,kBAHxB;AAIIC,IAAAA,OAAO,EAAE;AAJb,GADS,EAOT;AACIH,IAAAA,EAAE,EAAE,yBADR;AAEIC,IAAAA,OAAO,EAAE,cAFb;AAGIC,IAAAA,kBAAkB,EAAE,aAHxB;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAPS,EAaT;AACIH,IAAAA,EAAE,EAAE,wBADR;AAEIC,IAAAA,OAAO,EAAE,aAFb;AAGIC,IAAAA,kBAAkB,EAAE,YAHxB;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAbS,EAmBT;AACIH,IAAAA,EAAE,EAAE,kBADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,kBAAkB,EAAE,MAHxB;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAnBS,CAAb;AA4BA,MAAIC,UAAJ;;AAEA,MAAGT,QAAQ,IAAE,CAAb,EAAe;AACXS,IAAAA,UAAU,GAAG,wBAAb;AACH;;AAGD,SACI,MAAC,IAAD,QACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,IAAZ;AAAkB,IAAA,QAAQ,EAAEJ,QAA5B;AAAsC,IAAA,QAAQ,EAAEE,eAAhD;AAAiE,IAAA,MAAM;AAAvE,KACI,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAEE,IAAI,CAACJ,QAAD,CAAJ,CAAeO;AAApC,KACKE,UADL,EAEI,yBAAQT,QAAR,cAFJ,EAGI,gBAHJ,EAII,yBAAQA,QAAR,OAAmBI,IAAI,CAACJ,QAAD,CAAJ,CAAeM,OAAlC,CAJJ,CADJ,CADJ,CADJ;AAYH;;IAGKI,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAGlB;;;;6BAGQ;AAAA,UAGEC,WAHF,GAGiB,KAAKC,KAHtB,CAGED,WAHF;AAKL,UAAMR,IAAI,GAAG,CACT;AACIC,QAAAA,EAAE,EAAE,MADR;AAEIS,QAAAA,KAAK,EAAE,YAFX;AAGIN,QAAAA,OAAO,EAAE;AAHb,OADS,EAMT;AACIH,QAAAA,EAAE,EAAE,MADR;AAEIS,QAAAA,KAAK,EAAE,YAFX;AAGIN,QAAAA,OAAO,EAAE;AAHb,OANS,CAAb;AAaA,UAAMO,SAAS,GAAG,CAEV,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC;AAAf,qBAFU,EAOV,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC;AAAf,0BAPU,CAAlB;AAaA,aAAQ,mBACJ,MAAC,IAAD;AACI,QAAA,QAAQ,EAAEH,WADd;AAEI,QAAA,IAAI,EAAER,IAFV;AAGI,QAAA,QAAQ,EAAE,KAAKF;AAHnB,QADI,EAMHa,SAAS,CAACH,WAAD,CANN,CAAR;AAQH;;;;EA9CuBlB,KAAK,CAACsB,S;;AAmDlC,eAAeN,aAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Card, Tabs} from '@shopify/polaris';\n\nfunction FittedTabsExample() {\n    const [selected, setSelected] = useState(0);\n\n    const handleTabChange = useCallback(\n        (selectedTabIndex) => setSelected(selectedTabIndex),\n        [],\n    );\n\n    const tabs = [\n        {\n            id: 'all-gallary-setting',\n            content: 'Gallary Settings',\n            accessibilityLabel: 'Gallary Settings',\n            panelID: '<div class=\"ankit\">Hello</div>',\n        },\n        {\n            id: 'all-accepts-information',\n            content: 'Information1',\n            accessibilityLabel: 'Information',\n            panelID: 'all-accepts-information-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-appereance',\n            content: 'Appereance1',\n            accessibilityLabel: 'Appereance',\n            panelID: 'all-accepts-appereance-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-shop',\n            content: 'Shop1',\n            accessibilityLabel: 'Shop',\n            panelID: 'all-accepts-shop-fitted-Ccontent',\n        }\n    ];\n\n\n    let tabcontent;\n\n    if(selected==0){\n        tabcontent = '<div>Hello Tab 1</div>';\n    }\n\n\n    return (\n        <Card>\n            <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} fitted>\n                <Card.Section title={tabs[selected].accessibilityLabel}>\n                    {tabcontent}\n                    <p>Tab {selected} selected</p>\n                    <p></p>\n                    <p>Tab {selected} {tabs[selected].content}</p>\n                </Card.Section>\n            </Tabs>\n        </Card>\n    );\n}\n\n\nclass Instasettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n\n\n        const {selectedTab} = this.state;\n\n        const tabs = [\n            {\n                id: 'tab1',\n                title: 'something1',\n                panelID: 'panel2',\n            },\n            {\n                id: 'tab2',\n                title: 'something2',\n                panelID: 'panel2',\n            },\n        ];\n\n        const tabPanels = [\n            (\n                <Tabs.Panel id=\"panel1\">\n                    something\n                </Tabs.Panel>\n            ),\n            (\n                <Tabs.Panel id=\"panel2\">\n                    something else\n                </Tabs.Panel>\n            ),\n        ];\n\n        return  <div>\n            <Tabs\n                selected={selectedTab}\n                tabs={tabs}\n                onSelect={this.handleTabChange}\n            />\n            {tabPanels[selectedTab]}\n        </div>\n    }\n\n\n}\n\nexport default Instasettings;\n"]},"metadata":{},"sourceType":"module"}