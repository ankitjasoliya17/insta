{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useCallback, useState } from 'react';\nimport { Button, Checkbox, Form, FormLayout, TextField, Select } from '@shopify/polaris';\n\nvar Postsettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Postsettings, _React$Component);\n\n  var _super = _createSuper(Postsettings);\n\n  function Postsettings(props) {\n    _classCallCheck(this, Postsettings);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Postsettings, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(FormOnSubmitExample, null));\n    }\n  }]);\n\n  return Postsettings;\n}(React.Component);\n\nexport default Postsettings;\n\nfunction FormOnSubmitExample() {\n  var _useState = useState(false),\n      newsletter = _useState[0],\n      setNewsletter = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var handleSubmit = useCallback(function (_event) {\n    setEmail('sdd');\n    setNewsletter(false);\n  }, []);\n  var handleNewsLetterChange = useCallback(function (value) {\n    return setNewsletter(value);\n  }, []);\n\n  var _useState3 = useState('grid'),\n      selected = _useState3[0],\n      setSelected = _useState3[1];\n\n  var handleSelectChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n  var handleEmailChange = useCallback(function (value) {\n    return setEmail(value);\n  }, []);\n  var options = [{\n    label: 'Grid',\n    value: 'grid'\n  }, {\n    label: 'List',\n    value: 'list'\n  }];\n  return __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(Checkbox, {\n    label: \"Sign up for the Polaris newsletter\",\n    checked: newsletter,\n    onChange: handleNewsLetterChange\n  }), __jsx(TextField, {\n    value: email,\n    onChange: handleEmailChange,\n    label: \"Email\",\n    type: \"email\"\n  }), __jsx(Select, {\n    label: \"Widget Type\",\n    options: options,\n    onChange: handleSelectChange,\n    value: selected\n  }), __jsx(Button, {\n    submit: true\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/postsettings.js"],"names":["React","useCallback","useState","Button","Checkbox","Form","FormLayout","TextField","Select","Postsettings","props","Component","FormOnSubmitExample","newsletter","setNewsletter","email","setEmail","handleSubmit","_event","handleNewsLetterChange","value","selected","setSelected","handleSelectChange","handleEmailChange","options","label"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,SAA5C,EAAsDC,MAAtD,QAAmE,kBAAnE;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAGlB;;;;6BAGQ;AAEL,aAAO,mBACH,MAAC,mBAAD,OADG,CAAP;AAGH;;;;EAZsBV,KAAK,CAACW,S;;AAiBjC,eAAeF,YAAf;;AAGA,SAASG,mBAAT,GAA+B;AAAA,kBACSV,QAAQ,CAAC,KAAD,CADjB;AAAA,MACpBW,UADoB;AAAA,MACRC,aADQ;;AAAA,mBAEDZ,QAAQ,CAAC,EAAD,CAFP;AAAA,MAEpBa,KAFoB;AAAA,MAEbC,QAFa;;AAI3B,MAAMC,YAAY,GAAGhB,WAAW,CAAC,UAACiB,MAAD,EAAY;AACzCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,MAAMK,sBAAsB,GAAGlB,WAAW,CACtC,UAACmB,KAAD;AAAA,WAAWN,aAAa,CAACM,KAAD,CAAxB;AAAA,GADsC,EAEtC,EAFsC,CAA1C;;AAT2B,mBAaKlB,QAAQ,CAAC,MAAD,CAbb;AAAA,MAapBmB,QAboB;AAAA,MAaVC,WAbU;;AAc3B,MAAMC,kBAAkB,GAAGtB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWE,WAAW,CAACF,KAAD,CAAtB;AAAA,GAAD,EAAgC,EAAhC,CAAtC;AAEA,MAAMI,iBAAiB,GAAGvB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWJ,QAAQ,CAACI,KAAD,CAAnB;AAAA,GAAD,EAA6B,EAA7B,CAArC;AAEA,MAAMK,OAAO,GAAG,CACZ;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAgBN,IAAAA,KAAK,EAAE;AAAvB,GADY,EAEZ;AAACM,IAAAA,KAAK,EAAE,MAAR;AAAgBN,IAAAA,KAAK,EAAE;AAAvB,GAFY,CAAhB;AAKA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH;AAAhB,KACI,MAAC,UAAD,QACI,MAAC,QAAD;AACI,IAAA,KAAK,EAAC,oCADV;AAEI,IAAA,OAAO,EAAEJ,UAFb;AAGI,IAAA,QAAQ,EAAEM;AAHd,IADJ,EAOI,MAAC,SAAD;AACI,IAAA,KAAK,EAAEJ,KADX;AAEI,IAAA,QAAQ,EAAES,iBAFd;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,IAAI,EAAC;AAJT,IAPJ,EAcI,MAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,QAAQ,EAAEF,kBAHd;AAII,IAAA,KAAK,EAAEF;AAJX,IAdJ,EAqBI,MAAC,MAAD;AAAQ,IAAA,MAAM;AAAd,cArBJ,CADJ,CADJ;AA2BH","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Button, Checkbox, Form, FormLayout, TextField,Select} from '@shopify/polaris';\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n\n        return <div>\n            <FormOnSubmitExample />\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n\n\nfunction FormOnSubmitExample() {\n    const [newsletter, setNewsletter] = useState(false);\n    const [email, setEmail] = useState('');\n\n    const handleSubmit = useCallback((_event) => {\n        setEmail('sdd');\n        setNewsletter(false);\n    }, []);\n\n    const handleNewsLetterChange = useCallback(\n        (value) => setNewsletter(value),\n        [],\n    );\n    const [selected, setSelected] = useState('grid');\n    const handleSelectChange = useCallback((value) => setSelected(value), []);\n\n    const handleEmailChange = useCallback((value) => setEmail(value), []);\n\n    const options = [\n        {label: 'Grid', value: 'grid'},\n        {label: 'List', value: 'list'}\n    ];\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormLayout>\n                <Checkbox\n                    label=\"Sign up for the Polaris newsletter\"\n                    checked={newsletter}\n                    onChange={handleNewsLetterChange}\n                />\n\n                <TextField\n                    value={email}\n                    onChange={handleEmailChange}\n                    label=\"Email\"\n                    type=\"email\"\n                />\n\n                <Select\n                    label=\"Widget Type\"\n                    options={options}\n                    onChange={handleSelectChange}\n                    value={selected}\n                />\n\n                <Button submit>Submit</Button>\n            </FormLayout>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}