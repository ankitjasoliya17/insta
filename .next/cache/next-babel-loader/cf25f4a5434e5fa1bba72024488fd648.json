{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useCallback, useState } from 'react';\nimport { Card, Tabs } from '@shopify/polaris';\nimport Postsettings from '../pages/postsettings';\nimport Acceptinformation from '../pages/acceptsinformation';\nimport axios from 'axios';\n\nfunction FittedTabsExample(props) {\n  var _useState = useState(0),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelected(selectedTabIndex);\n  }, []);\n  var postsetting = props.allpostsettings;\n  var tabs = [{\n    id: 'all-post-setting',\n    content: 'Gallary Settings',\n    accessibilityLabel: 'Gallary Settings',\n    panelID: 'all-post-setting-fitted-Ccontent'\n  }, {\n    id: 'all-accepts-information',\n    content: 'Information',\n    accessibilityLabel: 'Information',\n    panelID: 'all-accepts-information-fitted-Ccontent'\n  }, {\n    id: 'all-accepts-appereance',\n    content: 'Appereance',\n    accessibilityLabel: 'Appereance',\n    panelID: 'all-accepts-appereance-fitted-Ccontent'\n  }, {\n    id: 'all-accepts-shop',\n    content: 'Shop',\n    accessibilityLabel: 'Shop',\n    panelID: 'all-accepts-shop-fitted-Ccontent'\n  }];\n  var tabcontent;\n\n  if (selected == 0) {\n    tabcontent = __jsx(Postsettings, {\n      settings: postsetting\n    });\n  } else if (selected == 1) {\n    tabcontent = __jsx(Acceptinformation, {\n      settings: postsetting\n    });\n  }\n\n  return __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange,\n    fitted: true\n  }, __jsx(Card.Section, null, tabcontent)));\n}\n\nvar Instasettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Instasettings, _React$Component);\n\n  var _super = _createSuper(Instasettings);\n\n  function Instasettings(props) {\n    var _this;\n\n    _classCallCheck(this, Instasettings);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      allsettings: false\n    };\n    _this.setnewstatus = _this.setnewstatus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Instasettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var search = window.location.search; // could be '?foo=bar'\n\n      var params = new URLSearchParams(search);\n      var shop_name = params.get('shop');\n      var postdata = {\n        shop: shop_name\n      };\n      var self = this;\n      axios.post('http://localhost:5000/get_settings/', postdata).then(function (response1) {\n        self.setnewstatus(response1.data);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"setnewstatus\",\n    value: function setnewstatus(data) {\n      this.setState({\n        allsettings: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(FittedTabsExample, {\n        allpostsettings: this.state.allsettings\n      }));\n    }\n  }]);\n\n  return Instasettings;\n}(React.Component);\n\nexport default Instasettings;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/instasettings.js"],"names":["React","useCallback","useState","Card","Tabs","Postsettings","Acceptinformation","axios","FittedTabsExample","props","selected","setSelected","handleTabChange","selectedTabIndex","postsetting","allpostsettings","tabs","id","content","accessibilityLabel","panelID","tabcontent","Instasettings","state","allsettings","setnewstatus","bind","search","window","location","params","URLSearchParams","shop_name","get","postdata","shop","self","post","then","response1","data","error","console","log","setState","Component"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Card, Tabs} from '@shopify/polaris';\nimport Postsettings from '../pages/postsettings';\nimport Acceptinformation from '../pages/acceptsinformation';\nimport axios from 'axios';\n\nfunction FittedTabsExample(props) {\n\n    const [selected, setSelected] = useState(0);\n\n    const handleTabChange = useCallback(\n        (selectedTabIndex) => setSelected(selectedTabIndex),\n        [],\n    );\n\n    const postsetting = props.allpostsettings;\n\n    const tabs = [\n        {\n            id: 'all-post-setting',\n            content: 'Gallary Settings',\n            accessibilityLabel: 'Gallary Settings',\n            panelID: 'all-post-setting-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-information',\n            content: 'Information',\n            accessibilityLabel: 'Information',\n            panelID: 'all-accepts-information-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-appereance',\n            content: 'Appereance',\n            accessibilityLabel: 'Appereance',\n            panelID: 'all-accepts-appereance-fitted-Ccontent',\n        },\n        {\n            id: 'all-accepts-shop',\n            content: 'Shop',\n            accessibilityLabel: 'Shop',\n            panelID: 'all-accepts-shop-fitted-Ccontent',\n        }\n    ];\n\n    let tabcontent;\n    if(selected==0){\n        tabcontent = (\n            <Postsettings settings={postsetting} />\n        );\n    }else if(selected==1){\n        tabcontent = (\n            <Acceptinformation settings={postsetting} />\n        );\n    }\n\n    return (\n        <Card>\n            <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} fitted>\n                <Card.Section>\n                    {tabcontent}\n                </Card.Section>\n            </Tabs>\n        </Card>\n    );\n}\n\n\nclass Instasettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allsettings : false\n        }\n\n\n        this.setnewstatus = this.setnewstatus.bind(this);\n\n    }\n\n    componentDidMount(){\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            shop : shop_name,\n        }\n\n        var self = this;\n        axios.post('http://localhost:5000/get_settings/',postdata)\n            .then(function (response1) {\n                self.setnewstatus(response1.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    setnewstatus(data){\n        this.setState({\n            allsettings : data\n        })\n    }\n\n\n    render() {\n\n        return <div>\n            <FittedTabsExample allpostsettings={this.state.allsettings} />\n        </div>;\n    }\n\n\n}\n\nexport default Instasettings;\n"]},"metadata":{},"sourceType":"module"}