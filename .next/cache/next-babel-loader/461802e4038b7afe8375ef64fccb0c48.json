{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Toast, Button, Checkbox, Form, FormLayout, SettingToggle, TextStyle, TextField, Select, Card, Page, Popover, ColorPicker, Stack, hsbToRgb, rgbToHsb, rgbString } from '@shopify/polaris';\nimport axios from 'axios';\nimport \"@shopify/polaris/styles.css\";\n\nvar Postsettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Postsettings, _React$Component);\n\n  var _super = _createSuper(Postsettings);\n\n  function Postsettings(props) {\n    var _this;\n\n    _classCallCheck(this, Postsettings);\n\n    _this = _super.call(this, props);\n    var allsetting = props.settings;\n    console.log(allsetting);\n\n    if (allsetting != false) {\n      var colordata = '';\n\n      if (allsetting.color != '') {\n        colordata = JSON.parse(allsetting.color);\n      } else {\n        colordata = {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        };\n      }\n\n      var display_border = false;\n      var display_border_button_name = 'Enable';\n\n      if (allsetting.display_border != '') {\n        if (allsetting.display_border == false) {\n          display_border = false;\n          display_border_button_name = 'Enable';\n        } else {\n          display_border = true;\n          display_border_button_name = 'Disable';\n        }\n      }\n\n      var social_sharing = false;\n      var social_sharing_button_name = 'Enable';\n\n      if (allsetting.social_sharing != '') {\n        if (allsetting.social_sharing == false) {\n          social_sharing = false;\n          social_sharing_button_name = 'Enable';\n        } else {\n          social_sharing = true;\n          social_sharing_button_name = 'Disable';\n        }\n      }\n\n      _this.state = {\n        color: colordata,\n        popoverActive: allsetting.popover_active,\n        checkwidget: allsetting.check_widget,\n        checkhover: allsetting.check_hover,\n        display_border: display_border,\n        display_border_button_name: display_border_button_name,\n        social_sharing: social_sharing,\n        social_sharing_button_name: social_sharing_button_name,\n        border_width_value: allsetting.border_width_value,\n        widget_heading_value: allsetting.widget_heading_value,\n        layout_column_value: allsetting.border_width_value,\n        layout_row_value: allsetting.border_width_value,\n        padding_value: allsetting.border_width_value\n      };\n    } else {\n      _this.state = {\n        color: {\n          hue: 300,\n          brightness: 1,\n          saturation: 0.7,\n          alpha: 0.8\n        },\n        popoverActive: false,\n        checkwidget: 'grid',\n        checkhover: 'zoom_out',\n        display_border: false,\n        display_border_button_name: 'Enable',\n        social_sharing: false,\n        social_sharing_button_name: 'Enable',\n        border_width_value: 1,\n        widget_heading_value: '',\n        layout_column_value: 6,\n        layout_row_value: 2,\n        padding_value: 1,\n        button_type: false,\n        notification_status: false\n      };\n    }\n\n    _this.handlePopoverOpen = _this.handlePopoverOpen.bind(_assertThisInitialized(_this));\n    _this.handleColorChange = _this.handleColorChange.bind(_assertThisInitialized(_this));\n    _this.handleRgbChange = _this.handleRgbChange.bind(_assertThisInitialized(_this));\n    _this.handlePopoverClose = _this.handlePopoverClose.bind(_assertThisInitialized(_this));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleSelectHoveeffect = _this.handleSelectHoveeffect.bind(_assertThisInitialized(_this));\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_this));\n    _this.handleToggleSocial = _this.handleToggleSocial.bind(_assertThisInitialized(_this));\n    _this.handleBorderwidth = _this.handleBorderwidth.bind(_assertThisInitialized(_this));\n    _this.handleWidgetheading = _this.handleWidgetheading.bind(_assertThisInitialized(_this));\n    _this.handleLayoutCol = _this.handleLayoutCol.bind(_assertThisInitialized(_this));\n    _this.handleLayoutRow = _this.handleLayoutRow.bind(_assertThisInitialized(_this));\n    _this.handlePadding = _this.handlePadding.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.changestatus = _this.changestatus.bind(_assertThisInitialized(_this));\n    _this.handletoggleActive = _this.handletoggleActive.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Postsettings, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.setState({\n        button_type: true\n      });\n      var search = window.location.search; // could be '?foo=bar'\n\n      var params = new URLSearchParams(search);\n      var shop_name = params.get('shop');\n      var postdata = {\n        option: 1,\n        shop: shop_name,\n        settings: this.state\n      };\n      var self = this;\n      axios.post('http://localhost:5000/save_settings/', postdata).then(function (response1) {\n        self.changestatus();\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"changestatus\",\n    value: function changestatus() {\n      this.setState({\n        button_type: false,\n        notification_status: true\n      });\n    }\n  }, {\n    key: \"handleColorChange\",\n    value: function handleColorChange(color) {\n      this.setState({\n        color: color\n      });\n    }\n  }, {\n    key: \"handleRgbChange\",\n    value: function handleRgbChange(value) {\n      var rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n      console.log(rgbValues);\n      var color = rgbToHsb({\n        red: rgbValues[0],\n        green: rgbValues[1],\n        blue: rgbValues[2],\n        alpha: rgbValues[3]\n      });\n      this.setState({\n        color: color\n      });\n    }\n  }, {\n    key: \"handlePopoverClose\",\n    value: function handlePopoverClose() {\n      this.setState({\n        popoverActive: false\n      });\n    }\n  }, {\n    key: \"handlePopoverOpen\",\n    value: function handlePopoverOpen() {\n      this.setState({\n        popoverActive: true\n      });\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(value) {\n      this.setState({\n        checkwidget: value\n      });\n    }\n  }, {\n    key: \"handleSelectHoveeffect\",\n    value: function handleSelectHoveeffect(value) {\n      this.setState({\n        checkhover: value\n      });\n    }\n  }, {\n    key: \"handleToggle\",\n    value: function handleToggle() {\n      if (this.state.display_border == false) {\n        this.setState({\n          display_border: true,\n          display_border_button_name: 'Disable'\n        });\n      } else {\n        this.setState({\n          display_border: false,\n          display_border_button_name: 'Enable'\n        });\n      }\n    }\n  }, {\n    key: \"handleToggleSocial\",\n    value: function handleToggleSocial() {\n      if (this.state.social_sharing == false) {\n        this.setState({\n          social_sharing: true,\n          social_sharing_button_name: 'Disable'\n        });\n      } else {\n        this.setState({\n          social_sharing: false,\n          social_sharing_button_name: 'Enable'\n        });\n      }\n    }\n  }, {\n    key: \"handleBorderwidth\",\n    value: function handleBorderwidth(value) {\n      this.setState({\n        border_width_value: value\n      });\n    }\n  }, {\n    key: \"handleWidgetheading\",\n    value: function handleWidgetheading(value) {\n      this.setState({\n        widget_heading_value: value\n      });\n    }\n  }, {\n    key: \"handleLayoutCol\",\n    value: function handleLayoutCol(value) {\n      this.setState({\n        layout_column_value: value\n      });\n    }\n  }, {\n    key: \"handleLayoutRow\",\n    value: function handleLayoutRow(value) {\n      this.setState({\n        layout_row_value: value\n      });\n    }\n  }, {\n    key: \"handlePadding\",\n    value: function handlePadding(value) {\n      this.setState({\n        padding_value: value\n      });\n    }\n  }, {\n    key: \"handletoggleActive\",\n    value: function handletoggleActive() {\n      if (this.state.notification_status == false) {\n        this.setState({\n          notification_status: true\n        });\n      } else {\n        this.setState({\n          notification_status: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          color = _this$state.color,\n          popoverActive = _this$state.popoverActive;\n      var rgbaColor = rgbString(hsbToRgb(color));\n\n      var activator = __jsx(Button, {\n        onClick: this.handlePopoverOpen\n      }, __jsx(Stack, {\n        alignment: \"center\",\n        spacing: \"tight\"\n      }, __jsx(\"div\", {\n        style: {\n          height: \"2rem\",\n          width: \"2rem\",\n          borderRadius: \"0.3rem\",\n          background: rgbaColor\n        }\n      }), __jsx(\"span\", null, \"Border color\")));\n\n      var notification;\n\n      if (this.state.notification_status == true) {\n        notification = __jsx(Toast, {\n          content: \"Save Successfully\",\n          onDismiss: this.handletoggleActive,\n          active: true\n        });\n      }\n\n      var options = [{\n        label: 'Grid',\n        value: 'grid'\n      }, {\n        label: 'List',\n        value: 'list'\n      }];\n      var options1 = [{\n        label: 'Zoom Out',\n        value: 'zoom_out'\n      }, {\n        label: 'Zoom In',\n        value: 'zoom_in'\n      }];\n      return __jsx(\"div\", null, __jsx(Form, {\n        onSubmit: this.handleSubmit\n      }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(Select, {\n        label: \"Widget Type\",\n        options: options,\n        onChange: this.handleSelectChange,\n        value: this.state.checkwidget\n      }), __jsx(Select, {\n        label: \"Hover Effect\",\n        options: options1,\n        onChange: this.handleSelectHoveeffect,\n        value: this.state.checkhover\n      }), __jsx(SettingToggle, {\n        action: {\n          content: this.state.display_border_button_name,\n          onAction: this.handleToggle\n        },\n        enabled: this.state.display_border\n      })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        type: \"number\",\n        label: \"Layout Columns\",\n        value: this.state.layout_column_value,\n        onChange: this.handleLayoutCol\n      }), __jsx(TextField, {\n        type: \"number\",\n        label: \"Layout Rows\",\n        value: this.state.layout_row_value,\n        onChange: this.handleLayoutRow\n      }), __jsx(SettingToggle, {\n        action: {\n          content: this.state.social_sharing_button_name,\n          onAction: this.handleToggleSocial\n        },\n        enabled: this.state.social_sharing\n      })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        label: \"Border Width\",\n        type: \"number\",\n        value: this.state.border_width_value,\n        onChange: this.handleBorderwidth,\n        connectedRight: __jsx(Select, {\n          label: \"Pixel Unit\",\n          labelHidden: true,\n          value: \"PX\",\n          options: ['PX'],\n          onChange: \"hello\"\n        })\n      }), __jsx(TextField, {\n        label: \"Widget Heading\",\n        value: this.state.widget_heading_value,\n        onChange: this.handleWidgetheading\n      }), __jsx(Popover, {\n        active: popoverActive,\n        activator: activator,\n        onClose: this.handlePopoverClose\n      }, __jsx(Popover.Section, null, __jsx(ColorPicker, {\n        onChange: this.handleColorChange,\n        color: color,\n        allowAlpha: true\n      })), __jsx(Popover.Section, null, __jsx(TextField, {\n        value: rgbaColor,\n        onChange: this.handleRgbChange\n      })))), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        label: \"Padding (Space Beetween Image)\",\n        type: \"number\",\n        value: this.state.padding_value,\n        onChange: this.handlePadding,\n        connectedRight: __jsx(Select, {\n          label: \"Pixel Unit\",\n          labelHidden: true,\n          value: \"PX\",\n          options: ['PX'],\n          onChange: \"hello\"\n        })\n      })), __jsx(Button, {\n        submit: true,\n        loading: this.state.button_type,\n        primary: true\n      }, \"Submit\"))), notification);\n    }\n  }]);\n\n  return Postsettings;\n}(React.Component);\n\nexport default Postsettings;","map":{"version":3,"sources":["/Users/imac/Downloads/app/insta/pages/postsettings.js"],"names":["React","Toast","Button","Checkbox","Form","FormLayout","SettingToggle","TextStyle","TextField","Select","Card","Page","Popover","ColorPicker","Stack","hsbToRgb","rgbToHsb","rgbString","axios","Postsettings","props","allsetting","settings","console","log","colordata","color","JSON","parse","hue","brightness","saturation","alpha","display_border","display_border_button_name","social_sharing","social_sharing_button_name","state","popoverActive","popover_active","checkwidget","check_widget","checkhover","check_hover","border_width_value","widget_heading_value","layout_column_value","layout_row_value","padding_value","button_type","notification_status","handlePopoverOpen","bind","handleColorChange","handleRgbChange","handlePopoverClose","handleSelectChange","handleSelectHoveeffect","handleToggle","handleToggleSocial","handleBorderwidth","handleWidgetheading","handleLayoutCol","handleLayoutRow","handlePadding","handleSubmit","changestatus","handletoggleActive","setState","search","window","location","params","URLSearchParams","shop_name","get","postdata","option","shop","self","post","then","response1","error","value","rgbValues","replace","split","red","green","blue","rgbaColor","activator","height","width","borderRadius","background","notification","options","label","options1","content","onAction","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Toast,Button, Checkbox, Form, FormLayout,SettingToggle,TextStyle, TextField,Select,Card,Page,Popover,ColorPicker,Stack,hsbToRgb,rgbToHsb,rgbString} from '@shopify/polaris';\nimport axios from 'axios';\n\nimport \"@shopify/polaris/styles.css\";\n\n\n\nclass Postsettings extends React.Component {\n    constructor(props) {\n        super(props);\n        const allsetting = props.settings;\n\n        console.log(allsetting);\n        if(allsetting!=false){\n\n            let colordata = '';\n            if(allsetting.color!=''){\n              colordata = JSON.parse(allsetting.color);\n            }else{\n              colordata = {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                }\n            }\n\n            let display_border = false;\n            let display_border_button_name = 'Enable';\n            if(allsetting.display_border!=''){\n                if(allsetting.display_border == false){\n                    display_border  =  false;\n                    display_border_button_name  =  'Enable';\n                }else{\n                    display_border  =  true;\n                    display_border_button_name  =  'Disable';\n                }\n            }\n\n            let social_sharing = false;\n            let social_sharing_button_name = 'Enable';\n            if(allsetting.social_sharing!=''){\n                if(allsetting.social_sharing == false){\n                    social_sharing  =  false;\n                    social_sharing_button_name  =  'Enable';\n                }else{\n                    social_sharing  =  true;\n                    social_sharing_button_name  =  'Disable';\n                }\n            }\n\n\n            this.state = {\n                color: colordata,\n                popoverActive: allsetting.popover_active,\n                checkwidget : allsetting.check_widget,\n                checkhover : allsetting.check_hover,\n                display_border : display_border,\n                display_border_button_name : display_border_button_name,\n                social_sharing : social_sharing,\n                social_sharing_button_name : social_sharing_button_name,\n                border_width_value : allsetting.border_width_value,\n                widget_heading_value: allsetting.widget_heading_value,\n                layout_column_value : allsetting.border_width_value,\n                layout_row_value : allsetting.border_width_value,\n                padding_value : allsetting.border_width_value\n            }\n        }else{\n            this.state = {\n                color: {\n                    hue: 300,\n                    brightness: 1,\n                    saturation: 0.7,\n                    alpha: 0.8\n\n                },\n                popoverActive: false,\n                checkwidget : 'grid',\n                checkhover : 'zoom_out',\n                display_border : false,\n                display_border_button_name : 'Enable',\n                social_sharing : false,\n                social_sharing_button_name : 'Enable',\n                border_width_value : 1,\n                widget_heading_value: '',\n                layout_column_value : 6,\n                layout_row_value : 2,\n                padding_value : 1,\n                button_type : false,\n                notification_status : false\n            }\n        }\n\n\n\n        this.handlePopoverOpen = this.handlePopoverOpen.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleRgbChange = this.handleRgbChange.bind(this);\n        this.handlePopoverClose = this.handlePopoverClose.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleSelectHoveeffect = this.handleSelectHoveeffect.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleToggleSocial = this.handleToggleSocial.bind(this);\n        this.handleBorderwidth = this.handleBorderwidth.bind(this);\n        this.handleWidgetheading = this.handleWidgetheading.bind(this);\n        this.handleLayoutCol = this.handleLayoutCol.bind(this);\n        this.handleLayoutRow = this.handleLayoutRow.bind(this);\n        this.handlePadding = this.handlePadding.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.changestatus = this.changestatus.bind(this);\n        this.handletoggleActive = this.handletoggleActive.bind(this);\n\n\n    }\n\n\n    handleSubmit(){\n        this.setState({\n            button_type : true\n        })\n        const search = window.location.search; // could be '?foo=bar'\n        const params = new URLSearchParams(search);\n        const shop_name = params.get('shop');\n\n        const postdata = {\n            option : 1,\n            shop : shop_name,\n            settings : this.state\n        }\n\n        const self = this;\n        axios.post('http://localhost:5000/save_settings/',postdata)\n            .then(function (response1) {\n                self.changestatus()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changestatus(){\n        this.setState({\n            button_type : false,\n            notification_status :true\n        })\n    }\n\n    handleColorChange(color) {\n        this.setState({ color });\n    }\n\n\n    handleRgbChange(value) {\n        const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\n        console.log(rgbValues);\n        const color = rgbToHsb({\n            red: rgbValues[0],\n            green: rgbValues[1],\n            blue: rgbValues[2],\n            alpha: rgbValues[3]\n        });\n        this.setState({ color });\n    }\n\n\n    handlePopoverClose() {\n        this.setState({ popoverActive: false });\n    }\n\n\n    handlePopoverOpen() {\n        this.setState({\n            popoverActive : true\n        })\n    }\n\n\n    handleSelectChange(value){\n        this.setState({\n            checkwidget :value\n        })\n    }\n\n    handleSelectHoveeffect(value){\n        this.setState({\n            checkhover :value\n        })\n    }\n\n    handleToggle(){\n\n        if(this.state.display_border == false) {\n            this.setState({\n                display_border : true,\n                display_border_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                display_border : false,\n                display_border_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    handleToggleSocial(){\n\n        if(this.state.social_sharing == false) {\n            this.setState({\n                social_sharing : true,\n                social_sharing_button_name : 'Disable'\n            })\n        }else{\n            this.setState({\n                social_sharing : false,\n                social_sharing_button_name : 'Enable'\n            })\n        }\n\n    }\n\n    handleBorderwidth(value){\n        this.setState({\n            border_width_value: value\n        })\n    }\n\n    handleWidgetheading(value){\n        this.setState({\n            widget_heading_value: value\n        })\n    }\n\n    handleLayoutCol(value){\n        this.setState({\n            layout_column_value: value\n        })\n    }\n\n    handleLayoutRow(value){\n        this.setState({\n            layout_row_value: value\n        })\n    }\n\n    handlePadding(value){\n        this.setState({\n            padding_value: value\n        })\n    }\n\n    handletoggleActive(){\n        if(this.state.notification_status==false){\n            this.setState({\n                notification_status : true\n            })\n        }else{\n            this.setState({\n                notification_status : false\n            })\n        }\n\n    }\n\n    render() {\n\n        const { color, popoverActive } = this.state;\n\n        const rgbaColor = rgbString(hsbToRgb(color));\n\n        const activator = (\n            <Button onClick={this.handlePopoverOpen}>\n                <Stack alignment=\"center\" spacing=\"tight\">\n                    <div\n                        style={{\n                            height: \"2rem\",\n                            width: \"2rem\",\n                            borderRadius: \"0.3rem\",\n                            background: rgbaColor\n                        }}\n                    />\n                    <span>Border color</span>\n                </Stack>\n            </Button>\n        );\n\n        let notification;\n\n        if(this.state.notification_status==true){\n            notification = (\n                <Toast content=\"Save Successfully\" onDismiss={this.handletoggleActive} active />\n            );\n        }\n\n        const options = [\n            {label: 'Grid', value: 'grid'},\n            {label: 'List', value: 'list'}\n        ];\n\n        const options1 = [\n            {label: 'Zoom Out', value: 'zoom_out'},\n            {label: 'Zoom In', value: 'zoom_in'}\n        ];\n\n\n        return <div>\n            <Form\n                 onSubmit={this.handleSubmit}\n            >\n                <FormLayout>\n                    <FormLayout.Group>\n\n                        <Select\n                            label=\"Widget Type\"\n                            options={options}\n                            onChange={this.handleSelectChange}\n                            value={this.state.checkwidget}\n                        />\n\n                        <Select\n                            label=\"Hover Effect\"\n                            options={options1}\n                            onChange={this.handleSelectHoveeffect}\n                            value={this.state.checkhover}\n                        />\n\n                        <SettingToggle\n                            action={{\n                                content: this.state.display_border_button_name,\n                                onAction: this.handleToggle,\n                            }}\n                            enabled={this.state.display_border}\n                        />\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField type=\"number\" label=\"Layout Columns\" value={this.state.layout_column_value} onChange={this.handleLayoutCol} />\n                        <TextField type=\"number\" label=\"Layout Rows\" value={this.state.layout_row_value} onChange={this.handleLayoutRow} />\n                        <SettingToggle\n                            action={{\n                                content: this.state.social_sharing_button_name,\n                                onAction: this.handleToggleSocial,\n                            }}\n                             enabled={this.state.social_sharing}\n                        />\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField\n                            label=\"Border Width\"\n                            type=\"number\"\n                            value={this.state.border_width_value}\n                            onChange={this.handleBorderwidth}\n                            connectedRight={\n                                <Select\n                                    label=\"Pixel Unit\"\n                                    labelHidden\n                                    value=\"PX\"\n                                    options={['PX']}\n                                    onChange =\"hello\"\n                                />\n                            }\n                        />\n\n                        <TextField label=\"Widget Heading\" value={this.state.widget_heading_value} onChange={this.handleWidgetheading} />\n                        <Popover\n                            active={popoverActive}\n                            activator={activator}\n                            onClose={this.handlePopoverClose}\n                        >\n                            <Popover.Section>\n                                <ColorPicker\n                                    onChange={this.handleColorChange}\n                                    color={color}\n                                    allowAlpha\n                                />\n                            </Popover.Section>\n                            <Popover.Section>\n                                <TextField value={rgbaColor} onChange={this.handleRgbChange} />\n                            </Popover.Section>\n                        </Popover>\n\n\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField\n                            label=\"Padding (Space Beetween Image)\"\n                            type=\"number\"\n                            value={this.state.padding_value}\n                            onChange={this.handlePadding}\n                            connectedRight={\n                                <Select\n                                    label=\"Pixel Unit\"\n                                    labelHidden\n                                    value=\"PX\"\n                                    options={['PX']}\n                                    onChange =\"hello\"\n                                />\n                            }\n                        />\n                    </FormLayout.Group>\n\n                    <Button submit loading={this.state.button_type} primary>Submit</Button>\n                </FormLayout>\n            </Form>\n\n                {notification}\n\n\n        </div>;\n    }\n\n\n}\n\nexport default Postsettings;\n"]},"metadata":{},"sourceType":"module"}